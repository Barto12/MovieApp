{"version":3,"sources":["assets/netflix_logo.svg","Components/Header.js","assets/loading.svg","Components/Loader.js","Components/Message.js","Components/QnA.js","Components/Footer.js","assets/icon_tv.png","assets/icon_mobile.jpg","assets/icon_device.png","assets/icon_kid.png","assets/video_tv.m4v","assets/video_device.mp4","Components/Description.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Components/Section.js","assets/noPoster.png","Components/Poster.js","Routes/Movie/MoviePresenter.js","Routes/Movie/index.js","Routes/Movie/MovieContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","assets/noActor.png","assets/noCompany2.png","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["HeaderContainer","styled","header","Ul","ul","Image","div","netflixLogo","Li","li","props","current","ScLink","Link","withRouter","pathname","location","to","includes","Container","LoadingContainer","span","img","Title","h1","Loader","role","src","loadingBar","Span","color","Message","text","QnAContainer","QnAContent","QnATitle","QnASection","QnASubSection","QnASubTitle","QnASubDesc","handleQnATitle","event","target","children","classList","toggle","QnA","onClick","FooterContainer","FooterContent","FooterLinkContainer","FooterLinkTitle","FooterLinkContent","FooterLink","a","FooterDescContainer","FooterDescRights","h2","Footer","href","DescContainer","DescContent","DescSubContent","DescTitle","DescH1","DescP","p","DescImageContainer","DescImage","DescVideoTV","video","DescVideoDevice","Description","iconTV","videoTV","autoPlay","muted","loop","iconMobile","iconDevice","videoDevice","iconKid","HomeContainer","Iframe","iframe","Content","SubTitle","Genres","YearRuntimeContainer","Year","Runtime","YearRuntimeSpan","Rating","RatingChild","Overview","HomeSubContainer","HomePresenter","movieDetail","error","loading","checkPCMobileBool","indexOf","navigator","platform","toLowerCase","Helmet","videos","results","key","width","height","frameborder","allow","title","tagline","genres","map","genre","index","length","name","release_date","substring","runtime","vote_average","overview","api","axios","create","baseURL","params","api_key","language","homeApi","get","id","append_to_response","moviesApi","include_image_language","term","query","page","tvApi","state","nowPlaying","data","movieArray","i","push","result","movieId","Math","floor","random","this","setState","console","log","React","Component","Children","Section","imageUrl","Popularity","ContentContainer","YearRatingContainer","ContentRating","ContentRatingChild","PosterContainer","Poster","rating","year","isMovie","popularity","noPoster","TitleContainer","TitleContent","ButtonContainer","ButtonContent","ButtonLink","button","upcoming","popular","topRated","hash","nowPlaying2","window","movie","poster_path","round","MovieContainer","TVPresenter","airingToday","onTheAir","tv","first_air_date","TVContainer","Form","form","Input","input","Button","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateSearchTerm","onSubmit","placeholder","value","onChange","SearchContainer","lodaing","preventDefault","searchByTerm","BlurBackground","CoverContainer","CoverLink","Cover","CoverHeading","CoverMiddle","Data","GenreContainer","DateRunTimeContainer","VoteContainer","VoteStrong","strong","Divider","Item","Keywords","KeywordTitle","KeywordContent","KeywordSpan","TeaserContainer","TeaserTitle","TeaserVideo","IframeContainer","IframeDesc","ActorContainer","ActorTitle","ActorImageContainer","ActorImage","ActorPhoto","bgUrl","noActor","ActorName","ActorCharacter","CompanyContainer","CompanyTitle","CompanyContent","CompanyName","CompanyImage","noCompany2","CompanyMoney","CompanyDivider","Budget","Revenue","SplideContainer","SplideTitle","SplideLink","SplideImage","ReviewContainer","ReviewTitle","ReviewContent","Review","ReviewImageContent","ReviewImage","ReviewSubContent","ReviewName","ReviewDivider","ReviewDate","ReviewRating","ReviewOverview","ReviewLink","RecommendContainer","RecommendTitle","RecommendContent","RecommendSubContent","RecommendLink","RecommendSubTitle","RecommendName","RecommendRating","GototopButton","DetailPresenter","recommendations","cast","keywords","reviews","backdrops","tvDetail2","posters","backdrop_path","homepage","episode_run_time","keyword","profile_path","character","production_companies","logo_path","origin_country","budget","toLocaleString","revenue","options","rewind","perPage","perMove","gap","backdrop","file_path","alt","review","author","author_details","username","created_at","url","content","recommendation","media_type","String","scrollTo","class","style","fontSize","DetailContainer","match","history","parsedId","parseInt","isNaN","path","exact","component","Home","Movie","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","className","GlobalStyles","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f69c328.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/netflix_logo.5787551b.svg\";","// 리액트에서 컴포넌트에 CSS 스타일을 주는 방법은 여러가지가 있다.\r\n// Header2처럼 폴더를 따로 만들고 거기에 index.js와 Header2.module.css를 통해 스타일을 줄 수도 있고 아래와 같이 styled-component를 이용할 수도 있다.\r\n// 스타일 컴포넌트를 사용하기 위해 import해왔다.\r\nimport styled from \"styled-components\";\r\n\r\n// react-router-dom으로부터 withRouter를 가져와서 사용할 수 있다.\r\n// withRouter는 다른 컴포넌트를 감싸는 컴포넌트로서 라우터에 어떠한 정보를 준다.\r\n// 아래에 Header컴포넌트를 withRouter(Header)로 감싸서 사용할 수 있다.\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport netflixLogo from \"../assets/netflix_logo.svg\";\r\n\r\n// 스타일 컴포넌트를 이용하면 해당 태그를 이용해서 새로운 이름의 컴포넌트를 생성할 수 있다.\r\n// const HeaderContainer = styled.header``는 스타일 컴포넌트와 header태그를 이용해서 새로운 HeaderContainer컴포넌트를 생성한 것이다.\r\n// 주의할 점은 컴포넌트를 생성할 때는 반드시 첫 글자는 대문자로 시작해야 한다. (headerContainer->오류남, HeaderContainer로 생성해야 함)\r\n// 그리고 그 header태그에 줄 css스타일을 ``안에 적어주면 된다.\r\n// ``안에 스타일을 적을 때는 sass(scss)문법으로 적을 수도 있다.\r\n// 스타일 컴포넌트를 사용할 때 HTML태그는 styled.ul 이런 식으로 사용하고 react에서 사용하는 컴포넌트는 styled(Link) 형태로 쓴다.\r\nconst HeaderContainer = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translate(-50%);\r\n  display: flex;\r\n  /* background-color: transparent; */\r\n  /* background-color: black; */\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  backdrop-filter: blur(3px);\r\n  z-index: 100;\r\n  padding: 0 40px;\r\n  width: 100%;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 0;\r\n    top: 0;\r\n    left: 0;\r\n    transform: none;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background: url(${netflixLogo}) no-repeat center center;\r\n  background-size: 150px;\r\n  margin-right: auto;\r\n  width: 160px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-right: 0;\r\n    background-size: 110px;\r\n  }\r\n`;\r\n\r\nconst Li = styled.li`\r\n  width: 140px;\r\n  text-align: center;\r\n  font-size: 20px;\r\n\r\n  /* 아래 ScLi컴포넌트가 가지고 있는 props를 가져와서 props 값의 조건에 따라 각각 다른 값을 할당해줄 수 있다. */\r\n  /* 만약 ScLi컴포넌트가 props로 current={true}를 가지고 있다면 props.current를 통해 true값을 여기에 가져올 수 있다. */\r\n  /* $안에 자바스크립트 코드를 쓸 수 있고, 자바스크립트의 삼항연산자를 이용할 수 있다. */\r\n  /* props를 매개변수로 받아서 props안에 current값을 체크해서 값이 있다면 true를, 없다면 false를 반환해서 border-bottom의 스타일을 준다. */\r\n  border-bottom: 3px solid ${(props) => (props.current ? \"#E30914\" : \"transparent\")};\r\n\r\n  @media (max-width: 768px) {\r\n    width: 60px;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\n// 스타일 컴포넌트를 사용할 때 기존의 HTML태그는 styled.ul 형태로 사용하고, react에서 사용하는 컴포넌트는 styled(Link) 형태로 사용한다.\r\n// Link라는 것은 HTML태그가 아니고 react에 있는 컴포넌트이기 때문에 styled(Link) 형태로 써준다.\r\nconst ScLink = styled(Link)`\r\n  height: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: ${(props) => (props.current ? \"#E30914\" : \"white\")};\r\n\r\n  @media (max-width: 768px) {\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\n// Header함수의 ()괄호 안에 인자에 props로 값을 받아올 수도 있고 props객체 안에 있는 바로 프로퍼티를 꺼내올 수도 있다.\r\n// 인자로 받아오는 props값은 특정 컴포넌트들로부터 전달받은 정보들이다.\r\n// 예를들어 /tv 라우트로 들어가게 되면 TV컴포넌트를 보여줄 것이고 TV컴포넌트로부터 해당 컴포넌트의 정보들을 props로 전달받게 되는 것이다.\r\n// props객체안에 location객체안에 pathname값을 바로 꺼내왔다.\r\nconst Header = ({ location: { pathname } }) => {\r\n  // console.log(pathname);\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      {/* 스타일 컴포넌트 모듈을 사용해서 React에서 HTML태그에 CSS 스타일을 줄 때는 ul 태그 대신 위에서 변수를 만들고 그 만든 변수 List로 태그명을 바꿔준다. */}\r\n      <Ul>\r\n        <Image>\r\n          <ScLink to=\"/\"></ScLink>\r\n        </Image>\r\n\r\n        {/* 스타일 컴포넌트 각각에게 props를 줄 수 있다. */}\r\n        {/* 예를들면 사용자가 아래와 같이 current라는 props를 주고 current의 props값에 따라 true나 false를 반환하게 할 수 있다. */}\r\n        {/* 여기서는 current가 true가 되면 ScLi에 border-bottom에 색깔을 주고 false가 되면 투명하게 처리했다. */}\r\n        {/* pathname===\"/\"을 통해 pathname이 /가 되면 해당 라우트에 들어왔기 때문에 true를 반환하게 해주는 것이다. */}\r\n        <Li current={pathname === \"/\" && true}>\r\n          {/* a태그 대신 react-router-dom에서 제공하는 Link컴포넌트를 사용했다. */}\r\n          {/* Link컴포넌트는 a태그의 href속성을 사용하지 않고 to속성을 사용한다. */}\r\n          <ScLink to=\"/\" current={pathname === \"/\" && true}>\r\n          hogar\r\n          </ScLink>\r\n        </Li>\r\n        <Li current={pathname.includes(\"/movie\") && true}>\r\n          <ScLink to=\"/movie\" current={pathname.includes(\"/movie\") && true}>\r\n          película\r\n          </ScLink>\r\n        </Li>\r\n        <Li current={pathname.includes(\"/tv\") && true}>\r\n          <ScLink to=\"/tv\" current={pathname.includes(\"/tv\") && true}>\r\n            TV\r\n          </ScLink>\r\n        </Li>\r\n        <Li current={pathname.includes(\"/search\") && true}>\r\n          <ScLink to=\"/search\" current={pathname.includes(\"/search\") && true}>\r\n          buscar\r\n          </ScLink>\r\n        </Li>\r\n      </Ul>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\n// withRouter컴포넌트는 다른 컴포넌트를 감싸는 컴포넌트로서 Header컴포넌트를 감싸주면, Header컴포넌트는 매개변수로 props값을 받아올 수 있다. (원래는 매개변수로 props를 받아오면 아무 값도 받아오지 못함)\r\n// 매개변수로 받아온 props에는 react-router-dom으로부터 받은 정보들이 있고 그 정보들은 객체 형태로 그 안에는 history, location, match등의 객체가 있다.\r\n// withRouter 컴포넌트 덕분에 여러 컴포넌트들과 연결해서 props 데이터를 받아올 수 있는 것이다.\r\nexport default withRouter(Header);\r\n","export default __webpack_public_path__ + \"static/media/loading.417f52a3.svg\";","import styled from \"styled-components\";\r\nimport loadingBar from \"../assets/loading.svg\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 95vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst LoadingContainer = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Image = styled.img``;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n  font-size: 18px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    {/* 현재는 이모지를 span태그로 감싸지 않아도 되지만, 예전 리액트에서는 이모지를 쓸 때 시각장애인들로 하여금 스크린을 읽을 수 있도록 아래와 같이 span태그로 감싸주고 role속성과 aria-label속성을 써줘야 했다. (필수는 아니고 경고창이 뜸) */}\r\n    {/* role에는 span안의 데이터가 img(이미지)라고 말해주고, aria-label에는 아래 이미지가 Loading 이미지라고 설명해주는 것이다. */}\r\n    <LoadingContainer role=\"img\" aria-label=\"Loading\">\r\n      <Image src={loadingBar}></Image>\r\n      <Title>Cargando...</Title>\r\n    </LoadingContainer>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Span = styled.span`\r\n  /* 스타일 컴포넌트 안에서는 $와 중괄호 안에 자바스크립트를 사용할 수 있다. */\r\n  /* ${(props) =>\r\n    props.color}를 통해 Span컴포넌트가 가지고 있는 모든 props들을 가지고 온 후 그 중에서 props.color를 통해 color props를 가져와서 color={color}에서 {color}부분에 해당하는 값을 가져와서 스타일을 적용시켜준다. */\r\n  /* color: ${(props) => props.color}; */\r\n`;\r\n\r\n// Message라는 함수를 만들고 Message함수는 color와 text 매개 변수를 가지고 Presenter.js파일들에서 전달 했던 값들을 받는다.\r\n// color로는 사용자가 지정한 색깔을 받아오고 text로는 error변수를 받아와서 화면에 뿌려준다.\r\n// <Span color={color}></Span>를 통해 props로 받은 color를 위에 Span에 스타일로 준다.\r\nconst Message = ({ text }) => {\r\n  return (\r\n    <Container>\r\n      <Span>{text}</Span>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// Message함수가 받는 props에 대한 Type를 설정해준다.\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import styled from \"styled-components\";\r\n\r\nconst QnAContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 70px 0px;\r\n  border-top: 8px solid rgb(25, 25, 25);\r\n  width: 100%;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 30px 15px;\r\n  }\r\n`;\r\n\r\nconst QnAContent = styled.div`\r\n  width: 800px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst QnATitle = styled.h1`\r\n  color: white;\r\n  font-size: 42px;\r\n  text-align: center;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 27px;\r\n  }\r\n`;\r\n\r\nconst QnASection = styled.div`\r\n  margin-top: 65px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nconst QnASubSection = styled.div``;\r\n\r\nconst QnASubTitle = styled.div`\r\n  color: white;\r\n  background-color: #303030;\r\n  padding: 28px 0px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  font-size: 24px;\r\n  position: relative;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 20px 15px;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst QnASubDesc = styled.div`\r\n  color: white;\r\n  background-color: #303030;\r\n  font-size: 21px;\r\n  line-height: 1.6;\r\n  border-top: 1px solid black;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 0px;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n  z-index: -1;\r\n  padding-top: 30px;\r\n\r\n  &.active {\r\n    position: static;\r\n    height: 240px;\r\n    margin-top: 25px;\r\n    transition: 0.3s;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 20px;\r\n    padding: 0;\r\n    padding-top: 20px;\r\n    font-size: 15px;\r\n\r\n    &.active {\r\n      height: 240px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleQnATitle = (event) => {\r\n  event.target.children[0].classList.toggle(\"active\");\r\n};\r\n\r\nconst QnA = () => {\r\n  return (\r\n    <QnAContainer>\r\n      <QnAContent>\r\n        <QnATitle>Preguntas frecuentes</QnATitle>\r\n        <QnASection>\r\n          <QnASubSection>\r\n            <QnASubTitle onClick={handleQnATitle}>\r\n            ¿Qué es Netflix?\r\n              <QnASubDesc>\r\n              Netflix es un servicio de transmisión que le permite ver programas de televisión, películas, animaciones, documentales y más galardonados en miles de dispositivos con conexión a Internet.\r\n                <br></br>\r\n                <br></br>\r\n                Por una tarifa mensual baja, puede disfrutar de todo lo que quiera, cuando quiera, sin anuncios. Tenemos toneladas de contenido para ofrecer, nuevos programas de televisión y películas cada semana.\r\n              </QnASubDesc>\r\n            </QnASubTitle>\r\n            <QnASubTitle onClick={handleQnATitle}>\r\n            ¿Cuánto cuesta Netflix?\r\n              <QnASubDesc>\r\n              Vea Netflix en una variedad de dispositivos, incluidos teléfonos inteligentes, tabletas, televisores inteligentes, computadoras portátiles y dispositivos de transmisión, por una tarifa mensual.\r\n                <br></br>\r\n                <br></br>Las cuotas de membresía oscilan entre KRW 9.500 y KRW 14.500 por mes.\r\n                <br></br>\r\n                No hay costos ni compromisos adicionales.\r\n              </QnASubDesc>\r\n            </QnASubTitle>\r\n            <QnASubTitle onClick={handleQnATitle}>\r\n            ¿Dónde puedo verlo?\r\n              <QnASubDesc>\r\n              Puedes mirar en cualquier momento y en cualquier lugar en una variedad de dispositivos.\r\n                <br></br>\r\n                <br></br>\r\n                Si inicia sesión con su cuenta de Netflix, puede mirar directamente en netflix.com en su PC y en dispositivos que tengan conexión a Internet y sean compatibles con la aplicación Netflix (Smart TV, teléfono inteligente, tableta, transmisión de medios).\r\n                jugadores, consolas de juegos, etc.) en cualquier momento.\r\n              </QnASubDesc>\r\n            </QnASubTitle>\r\n            <QnASubTitle onClick={handleQnATitle}>\r\n            ¿Cómo cancelo mi membresía?\r\n              <QnASubDesc>\r\n              Netflix es fácil y sin complicaciones. Sin contratos engorrosos, sin compromisos.\r\n                <br></br>\r\n                La cancelación de la membresía también se puede completar en línea con dos clics.\r\n                <br></br>\r\n                <br></br>\r\n                No hay tarifas de cancelación, por lo que puede iniciar o cerrar su cuenta cuando lo desee.\r\n              </QnASubDesc>\r\n            </QnASubTitle>\r\n            <QnASubTitle onClick={handleQnATitle}>\r\n            ¿Qué contenido puedo ver en Netflix?\r\n              <QnASubDesc>\r\n              Netflix tiene una gran cantidad de contenido, que incluye largometrajes, documentales, programas de televisión, animaciones y originales premiados de Netflix.\r\n                <br></br>\r\n                <br></br>\r\n                Mira tu contenido favorito, cuando quieras, tanto como quieras.\r\n              </QnASubDesc>\r\n            </QnASubTitle>\r\n          </QnASubSection>\r\n        </QnASection>\r\n      </QnAContent>\r\n    </QnAContainer>\r\n  );\r\n};\r\n\r\nexport default QnA;\r\n","import styled from \"styled-components\";\r\n\r\nconst FooterContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 40px 0px;\r\n  border-top: 1px solid rgb(25, 25, 25);\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 100;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 20px 20px;\r\n    padding-bottom: 30px;\r\n  }\r\n`;\r\n\r\nconst FooterContent = styled.div``;\r\n\r\nconst FooterLinkContainer = styled.div`\r\n  width: 500px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst FooterLinkTitle = styled.h1`\r\n  color: gray;\r\n  font-size: 17px;\r\n`;\r\n\r\nconst FooterLinkContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  margin-top: 35px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 26px;\r\n  }\r\n`;\r\n\r\nconst FooterLink = styled.a`\r\n  color: gray;\r\n  font-size: 14px;\r\n  width: 110px;\r\n  margin-bottom: 21px;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 14px;\r\n    margin-bottom: 16px;\r\n  }\r\n`;\r\n\r\nconst FooterDescContainer = styled.div`\r\n  margin-top: 30px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst FooterDescTitle = styled.h1`\r\n  color: rgb(108, 117, 125);\r\n  font-size: 13px;\r\n`;\r\n\r\nconst FooterDescRights = styled.h2`\r\n  color: white;\r\n  font-size: 14px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterContainer>\r\n      <FooterContent>\r\n        <FooterLinkContainer>\r\n          <FooterLinkTitle>Netflix clone</FooterLinkTitle>\r\n          <FooterLinkContent>\r\n            <FooterLink href=\"https://help.netflix.com/es-es/node/412\">Preguntas frecuentes</FooterLink>\r\n            <FooterLink href=\"https://ir.netflix.net/ir-overview/profile/default.aspx\">Relaciones con inversionistas</FooterLink>\r\n            <FooterLink href=\"https://devices.netflix.com/en/\">Formas en las que puedes ver</FooterLink>\r\n            <FooterLink href=\"https://help.netflix.com/legal/corpinfo\">Información corporativa</FooterLink>\r\n            <FooterLink href=\"https://www.netflix.com/mx/browse/genre/839338\">Solo en Netflix</FooterLink>\r\n            <FooterLink href=\"https://help.netflix.com/es-es/\">Centro de ayuda</FooterLink>\r\n            <FooterLink href=\"https://jobs.netflix.com/\">Empleo</FooterLink>\r\n            <FooterLink href=\"https://help.netflix.com/legal/termsofuse\">Terminos de uso</FooterLink>\r\n            <FooterLink href=\"https://help.netflix.com/es-es/contactus\">Contacto</FooterLink>\r\n            <FooterLink href=\"https://www.netflix.com/mx/login?nextpage=https%3A%2F%2Fwww.netflix.com%2Fyouraccount\">Cuenta</FooterLink>\r\n            <FooterLink href=\"https://www.netflix.com/mx/redeem\">Canjear tarjetas de regalo</FooterLink>\r\n            <FooterLink href=\"https://help.netflix.com/legal/notices\">Avisos legales</FooterLink>\r\n          </FooterLinkContent>\r\n        </FooterLinkContainer>\r\n        <FooterDescContainer>\r\n          <FooterDescRights>© 2021 codersfy.com app for learning react.</FooterDescRights>\r\n        </FooterDescContainer>\r\n      </FooterContent>\r\n    </FooterContainer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/icon_tv.0049bc70.png\";","export default __webpack_public_path__ + \"static/media/icon_mobile.063578d5.jpg\";","export default __webpack_public_path__ + \"static/media/icon_device.8e6539e8.png\";","export default __webpack_public_path__ + \"static/media/icon_kid.bd003beb.png\";","export default __webpack_public_path__ + \"static/media/video_tv.053994fc.m4v\";","export default __webpack_public_path__ + \"static/media/video_device.3456030a.mp4\";","import styled from \"styled-components\";\r\nimport iconTV from \"../assets/icon_tv.png\";\r\nimport iconMobile from \"../assets/icon_mobile.jpg\";\r\nimport iconDevice from \"../assets/icon_device.png\";\r\nimport iconKid from \"../assets/icon_kid.png\";\r\nimport videoTV from \"../assets/video_tv.m4v\";\r\nimport videoDevice from \"../assets/video_device.mp4\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\n\r\nconst DescContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst DescContent = styled.div`\r\n  padding: 80px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  border-top: 8px solid rgb(25, 25, 25);\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 30px 15px;\r\n  }\r\n`;\r\n\r\nconst DescSubContent = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 1280px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst DescTitle = styled.div`\r\n  color: white;\r\n  flex: 0.8;\r\n  padding: 0 75px;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 0;\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    width: 100%;\r\n}\r\n  }\r\n`;\r\n\r\nconst DescH1 = styled.h1`\r\n  font-size: 46px;\r\n  margin-bottom: 20px;\r\n  line-height: 1.3;\r\n  font-weight: bold;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nconst DescP = styled.p`\r\n  font-size: 27px;\r\n  line-height: 1.6;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 1.5;\r\n  }\r\n`;\r\n\r\nconst DescImageContainer = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: relative;\r\n`;\r\n\r\nconst DescImage = styled.img`\r\n  width: 520px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst DescVideoTV = styled.video`\r\n  position: absolute;\r\n  top: 49%;\r\n  left: 49%;\r\n  transform: translate(-50%, -50%);\r\n  width: 382px;\r\n  z-index: -1;\r\n\r\n  @media (max-width: 768px) {\r\n    top: 45%;\r\n    width: 285px;\r\n  }\r\n`;\r\n\r\nconst DescVideoDevice = styled.video`\r\n  position: absolute;\r\n  top: 33%;\r\n  left: 49.5%;\r\n  transform: translate(-50%, -50%);\r\n  width: 320px;\r\n  z-index: -1;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 250px;\r\n  }\r\n`;\r\n\r\nconst Description = () => {\r\n  return (\r\n    <Container>\r\n      <DescContainer>\r\n        <DescContent>\r\n          <DescSubContent>\r\n            <DescTitle>\r\n              <DescH1>TV disfruta con</DescH1>\r\n              <DescP>Míralo en televisores inteligentes, PlayStation, Xbox, Chromecast, Apple TV, reproductores de Blu-ray y más</DescP>\r\n            </DescTitle>\r\n            <DescImageContainer>\r\n              <DescImage src={iconTV}></DescImage>\r\n              <DescVideoTV src={videoTV} autoPlay muted loop></DescVideoTV>\r\n            </DescImageContainer>\r\n          </DescSubContent>\r\n        </DescContent>\r\n        <DescContent>\r\n          <DescSubContent>\r\n            <DescImageContainer>\r\n              <DescImage src={iconMobile}></DescImage>\r\n            </DescImageContainer>\r\n            <DescTitle>\r\n              <DescH1>\r\n              Guarda tu contenido favorito\r\n                <br />\r\n                Míralo sin conexión.\r\n              </DescH1>\r\n              <DescP>Guarde fácilmente y disfrute sin problemas.</DescP>\r\n            </DescTitle>\r\n          </DescSubContent>\r\n        </DescContent>\r\n        <DescContent>\r\n          <DescSubContent>\r\n            <DescTitle>\r\n              <DescH1>\r\n              en varios dispositivos\r\n                <br />\r\n                Por favor mira.\r\n              </DescH1>\r\n              <DescP>Transmita películas y programas de TV ilimitados desde su teléfono inteligente, tableta, computadora portátil o TV. No hay ningún cargo adicional en absoluto.</DescP>\r\n            </DescTitle>\r\n            <DescImageContainer>\r\n              <DescImage src={iconDevice}></DescImage>\r\n              <DescVideoDevice src={videoDevice} autoPlay muted loop></DescVideoDevice>\r\n            </DescImageContainer>\r\n          </DescSubContent>\r\n        </DescContent>\r\n        <DescContent>\r\n          <DescSubContent>\r\n            <DescImageContainer>\r\n              <DescImage src={iconKid}></DescImage>\r\n            </DescImageContainer>\r\n            <DescTitle>\r\n              <DescH1>\r\n              perfil para niños\r\n                <br />\r\n                hazlo\r\n              </DescH1>\r\n              <DescP>Una emocionante aventura para disfrutar con tus personajes favoritos en tu propio espacio. Dele a su hijo esta experiencia especial. Es gratis si eres miembro de Netflix.</DescP>\r\n            </DescTitle>\r\n          </DescSubContent>\r\n        </DescContent>\r\n      </DescContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport QnA from \"Components/QnA\";\r\nimport Footer from \"Components/Footer\";\r\nimport Description from \"Components/Description\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst HomeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Iframe = styled.iframe`\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -1;\r\n  opacity: 0.65;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 3px solid yellow; */\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  color: white;\r\n  position: absolute;\r\n  top: 39%;\r\n  left: 40px;\r\n  transform: translateY(-50%);\r\n  width: 550px;\r\n  font-family: \"Do Hyeon\", sans-serif;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    left: 0;\r\n    padding: 0 15px;\r\n    top: 83%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 53px;\r\n  text-shadow: rgba(255, 255, 255, 0.6) 0px 5px 10px;\r\n  font-family: \"Do Hyeon\", sans-serif;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 30px;\r\n  }\r\n`;\r\n\r\nconst SubTitle = styled.h2`\r\n  font-size: 28px;\r\n  margin-top: 25px;\r\n  font-style: italic;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 18px;\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nconst Genres = styled.div`\r\n  font-size: 20px;\r\n  color: rgb(108, 117, 125);\r\n  margin-top: 18px;\r\n  margin-bottom: 8px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst YearRuntimeContainer = styled.div`\r\n  font-size: 20px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 20px;\r\n  color: rgb(108, 117, 125);\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst Runtime = styled.span`\r\n  font-size: 20px;\r\n  color: rgb(108, 117, 125);\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst YearRuntimeSpan = styled.span`\r\n  margin: 0 5px;\r\n  color: rgb(108, 117, 125);\r\n`;\r\n\r\nconst Rating = styled.div`\r\n  font-size: 20px;\r\n  color: white;\r\n  margin-top: 12px;\r\n  margin-bottom: 15px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst RatingChild = styled.span`\r\n  font-size: 22px;\r\n  color: dodgerblue;\r\n  margin-left: 7px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 17px;\r\n  }\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  font-size: 21px;\r\n  line-height: 1.6;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n    line-height: 1.2;\r\n  }\r\n`;\r\n\r\nconst HomeSubContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst HomePresenter = ({ movieDetail, error, loading }) => {\r\n  const checkPC = \"win16|win32|win64|macintel|mac|\";\r\n  const checkPCMobileBool = checkPC.indexOf(navigator.platform.toLowerCase()) < 0;\r\n\r\n  return loading ? (\r\n    <Loader></Loader>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Netflix - Inicio</title>\r\n      </Helmet>\r\n      {movieDetail && (\r\n        <>\r\n          <HomeContainer>\r\n            <Iframe\r\n              src={`https://www.youtube.com/embed/${movieDetail.videos.results[0].key}?controls=0&autoplay=1&loop=1&mute=1&playlist=${movieDetail.videos.results[0].key}`}\r\n              width=\"640\"\r\n              height=\"360\"\r\n              frameborder=\"0\"\r\n              allow=\"autoplay; fullscreen\"\r\n            ></Iframe>\r\n            <Content>\r\n              <Title>{movieDetail.title}</Title>\r\n              <SubTitle>{movieDetail.tagline}</SubTitle>\r\n              <Genres>{movieDetail.genres.map((genre, index) => (movieDetail.genres.length - 1 === index ? genre.name : `${genre.name} • `))}</Genres>\r\n              <YearRuntimeContainer>\r\n                <Year>{movieDetail.release_date.substring(0, 4)}</Year>\r\n                <YearRuntimeSpan>•</YearRuntimeSpan>\r\n                <Runtime>{movieDetail.runtime}분</Runtime>\r\n              </YearRuntimeContainer>\r\n              <Rating>\r\n                평점\r\n                <RatingChild>{movieDetail.vote_average}</RatingChild>\r\n              </Rating>\r\n              {checkPCMobileBool ? <Overview>{movieDetail.overview.substring(0, 310)}..</Overview> : <Overview>{movieDetail.overview.substring(0, 150)}..</Overview>}\r\n            </Content>\r\n            <HomeSubContainer>\r\n              <Description></Description>\r\n              <QnA></QnA>\r\n              <Footer></Footer>\r\n            </HomeSubContainer>\r\n          </HomeContainer>\r\n        </>\r\n      )}\r\n\r\n      {error && <Message text={error}></Message>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nHomePresenter.propTypes = {\r\n  movieDetail: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\n// axios가 가지고 있는 create()함수를 이용해서 함수 내부에 객체형태로 axios의 초기설정을 해줄 수 있다.\r\n// baseURL에는 API를 요청하는 기본 URL을, params에는 URL에 들어가는 api_key와 language에 대한 정보를 객체형태로 적어준다.\r\n// params 객체 안에 입력한 값들은 baseURL의 URL주소 뒤에 붙어서 들어간다.\r\n// (ex: https://api.themoviedb.org/3/tv/popular?api_key=d20d691c4dcca268fa8e0c655d698616&language=en-US)\r\n// 아래와 같이 설정해주게 되면 이제 우리가 API를 요청할 때 아래에 설정한 값들을 가지고 요청하게 된다.\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"f652f313a85c84e783dcc6128c6ff21d\",\r\n    language: \"es-MX\",\r\n  },\r\n});\r\n\r\n// 위에 설정을 해줬다면 이젠 get()함수를 통해 get방식으로 해당 주소로 API를 요청하면 된다.\r\n// 주의할 점은 /tv/popular가 아닌 tv/popular로 써줘야 한다.\r\n// 만약 /로 시작하게 되면 그것은 절대경로를 의미하고 그렇다면 위에 baseURL의 URL을 덮어씌워버리기 때문이다.\r\n// 우리는 상대경로를 써서 https://api.themoviedb.org/3/tv/popular로 요청해야 한다.\r\n// api.get(\"tv/popular\");\r\n\r\nexport const homeApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n};\r\n\r\n// moviesApi와 tvApi객체를 생성해서 Movie와 TV각각에 해당하는 API를 안에 담아서 힌 번에 관리할 수 있도록 한다.\r\n// moviesApi와 tvApi 객체안에 프로퍼티를 만들고 각각의 프로퍼티는 api.get()을 통해 URL주소로 요청하고 요청한 결과 값을 반환해준다.\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  topRated: () => api.get(\"movie/top_rated\"),\r\n\r\n  // movieDetail의 함수는 id값을 매개변수로 받고 그 id를 이용해서 movie/:id 주소로 api를 요청한다.\r\n  // api.get(`movie/${id}`,{})에서 두 번째 인자로 {}중괄호를 쓰고 그 안에 추가적인 params를 써줄 수 있다.\r\n  // 이런 방식을 통해 라우터, 파라미터들을 개별적으로 설정할 수 있다.\r\n  // TheMovieDB사이트에서 추가적으로 지원하는 append_to_response 를 통해 추가적인 정보들을 요청할 수 있다.\r\n  // append_to_response에 video나 image등을 params로 같이 전달하게 되면 결과 값으로 id, key(유튜브 예고편 URL주소), 이름, site, size 등의 정보를 가져올 수 있다.\r\n  // 유튜브 예고편 URL 주소는 https://www.youtube.com/watch?v=key값 형태로 넣어주면 된다.\r\n  // 위의 형태로 iframe으로 가져오면 youtube에서 거부하는 문제가 있어서 https://www.youtube.com/embed/key값 형태로 가져오는 것으로 변경했다.\r\n  // key값은 videos에 results안에 key에 있는 값이다.\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  similarMovies: (id) => api.get(`/movie/${id}/similar`),\r\n  recommendations: (id) => api.get(`/movie/${id}/recommendations`),\r\n  credits: (id) => api.get(`/movie/${id}/credits`),\r\n  keywords: (id) => api.get(`/movie/${id}/keywords`),\r\n  reviews: (id) =>\r\n    api.get(`/movie/${id}/reviews`, {\r\n      params: {\r\n        language: \"en-US\",\r\n      },\r\n    }),\r\n  images: (id) =>\r\n    api.get(`/movie/${id}/images`, {\r\n      params: {\r\n        include_image_language: \"kr,null\",\r\n      },\r\n    }),\r\n\r\n  // search함수는 term값을 받고 term을 이용해서 검색한다.\r\n  // 위에 movieDetail은 append_to_response에 값을 넣어 전달했지만 아래 search는 params로 query안에 값을 전달해야 한다.\r\n  // append_to_response, query등의 이름은 변경 불가하다.\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: term,\r\n\r\n        // 만약 인자 term에 문자열+빈칸 형태로 값이 오게 되면 (ex: hello Cody! => hello%20Cody%21) 이런 식으로 나오게 된다.\r\n        // 예를들어 사용자가 @를 입력하면 URL에 인코딩 변환되서 들어가야 한다. 왜냐하면 term은 string으로 되어야 하기 때문이다.\r\n        // 그래서 우리는 이것을 처리하는 부분이 필요하다. 그 때 사용하는 것이 encodeURIComponent이다.\r\n        // 즉 어떤 term값을 넘기든 encodeURIComponent()함수를 통해 값을 인코딩하고 그 문자열을 검색한다.\r\n        // axios에서 기본적으로 encodeURIComponent을 지원해주기 때문에 굳이 쓰지 않아도 됨\r\n        // query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n\r\n  nowPlaying2: () =>\r\n    api.get(`movie/now_playing`, {\r\n      params: {\r\n        page: \"2\",\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  onTheAir: () => api.get(\"tv/on_the_air\"),\r\n  tvDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  tvDetail2: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        language: \"en-US\",\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  similarMovies: (id) => api.get(`/tv/${id}/similar`),\r\n  recommendations: (id) => api.get(`/tv/${id}/recommendations`),\r\n  credits: (id) => api.get(`/tv/${id}/credits`),\r\n  keywords: (id) => api.get(`/tv/${id}/keywords`),\r\n  reviews: (id) =>\r\n    api.get(`/tv/${id}/reviews`, {\r\n      params: {\r\n        language: \"es-MX\",\r\n      },\r\n    }),\r\n  images: (id) =>\r\n    api.get(`/tv/${id}/images`, {\r\n      params: {\r\n        include_image_language: \"kr,null\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n};\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { homeApi } from \"api\";\r\n\r\nclass HomeContainer extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    movieDetail: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results },\r\n      } = await homeApi.nowPlaying();\r\n\r\n      let movieArray = [];\r\n\r\n      for (let i = 0; i < 1; i++) {\r\n        movieArray.push(results.map((result) => result.id));\r\n      }\r\n\r\n      const movieId = movieArray[0][Math.floor(Math.random() * movieArray[0].length)];\r\n\r\n      const { data: movieDetail } = await homeApi.movieDetail(movieId);\r\n\r\n      if (movieDetail.videos.results.length === 0) {\r\n        const { data: movieDetail } = await homeApi.movieDetail(497698);\r\n\r\n        this.setState({\r\n          movieDetail,\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        movieDetail,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      this.setState({\r\n        error: \"Can't find Home Video.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movieDetail, error, loading } = this.state;\r\n    // console.log(this.state);\r\n\r\n    return <HomePresenter movieDetail={movieDetail} error={error} loading={loading} />;\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n// styled-component를 이용해서 div태그를 생성해서 그것을 변수에 담아서 리액트 컴포넌트 형태로 사용할 수 있도록 한다.\r\nconst Container = styled.div`\r\n  padding: 40px;\r\n  padding-top: 0px;\r\n  padding-bottom: 0;\r\n  margin-top: 15px;\r\n  /* border: 3px solid yellow; */\r\n\r\n  /* :not(:last-child)를 통해 마지막 Container를 제외한 나머지 것들에 스타일을 준다. */\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 15px;\r\n    margin-top: 0px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  color: white;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst Children = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  max-width: 2400px;\r\n  flex-wrap: wrap;\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\n// children은 리액트가 가지고 있는 예약된 props이다.\r\n// {title}과 {children}을 통해 title과 children의 데이터를 Title과 Children컴포넌트 안에 넣어준다.\r\n// react에서 children은 일반적으로 컴포넌트 사이의 값을 받아온다.\r\n// 여기서는 예를들면 HomePresenter.js에서 건네준 <Section>movie</Section> Section컴포넌트의 사이의 movie 값을 받는다.\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <Container>\r\n      {/* <Title>{title}</Title> */}\r\n      <Children>{children}</Children>\r\n    </Container>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n};\r\n\r\nexport default Section;\r\n","export default __webpack_public_path__ + \"static/media/noPoster.8a5ba7e5.png\";","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport noPoster from \"../assets/noPoster.png\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 13px;\r\n  transition: 0.2s linear;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  /* background의 url를 지정해주기 위해 아래와 같이 props를 매개변수로 받아와서 props.imageUrl을 통해 <Image>컴포넌트가 가지고 있는 {imageUrl} 데이터를 가져온다. */\r\n  /* URL주소앞에 https://image.tmdb.org/t/p/w300 를 붙여주고 그 뒤에 이미지의 URL를 입력해줘야 정상적으로 가져와진다. */\r\n  /* w300대신 w400이나 w500, original을 통해 가져오려고 하는 이미지 크기를 조정할 수 있다. */\r\n  background: url(${(props) => props.imageUrl}) no-repeat center center;\r\n  background-size: cover;\r\n  /* height: 360px; */\r\n  height: 340px;\r\n  transition: 0.2s linear;\r\n  border-radius: 7px;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 280px;\r\n  }\r\n`;\r\n\r\nconst Overview = styled.span`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 0px;\r\n  opacity: 0;\r\n  transition: 0.2s linear;\r\n  color: white;\r\n  line-height: 1.8;\r\n  font-size: 14px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Popularity = styled.span`\r\n  position: absolute;\r\n  bottom: 18px;\r\n  left: 50%;\r\n  transform: translate(-50%);\r\n  opacity: 0;\r\n  transition: 0.2s linear;\r\n  color: white;\r\n  line-height: 1.8;\r\n  font-size: 14px;\r\n  padding: 6px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  border: 1px solid white;\r\n  width: 48%;\r\n  border-radius: 3px;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    color: dodgerblue;\r\n    border: 1px solid dodgerblue;\r\n  }\r\n`;\r\n\r\nconst PopularityChild = styled.span`\r\n  color: dodgerblue;\r\n  font-size: 21px;\r\n  margin-left: 7px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  color: white;\r\n  font-size: 15px;\r\n  margin-top: 12px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst YearRatingContainer = styled.div`\r\n  margin-top: 11px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  color: gray;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ContentRating = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  color: gray;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst ContentRatingChild = styled.div`\r\n  font-size: 14px;\r\n  color: gray;\r\n  margin-left: 3px;\r\n  margin-top: 2px;\r\n`;\r\n\r\nconst PosterContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 7px;\r\n  transition: 0.2s linear;\r\n\r\n  /* PosterContainer에 hover했을 때 Image와 Popularity의 스타일을 변경해준다. */\r\n  /* ${Image}라고 적어준 이유는 Image는 const로 선언된 변수이기 때문에 자바스크립트를 쓸 수 있는 $중괄호 형태로 묶어줘야 한다. */\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Overview} {\r\n      opacity: 1;\r\n    }\r\n    ${Popularity} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ScLink = styled(Link)`\r\n  width: 220px;\r\n  border-radius: 7px;\r\n  margin-right: 20px;\r\n  margin-bottom: 45px;\r\n\r\n  /* &:nth-child(10),\r\n  &:nth-child(20) {\r\n    margin-right: 0;\r\n  } */\r\n\r\n  &:hover {\r\n    ${Container} {\r\n      transform: scale(1.05);\r\n    }\r\n    ${PosterContainer} {\r\n      box-shadow: 0 2px 8px black, 0 2px 4px black;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 0;\r\n    width: 170px;\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\n// Poster함수는 id, imageUrl, title, isMovie등의 파라미터를 받고 isMovie파라미터의 기본값으로는 false로 설정해줬다.\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false, overview, popularity }) => {\r\n  return (\r\n    // react-router-dom이 가지고 있는 Link컴포넌트를 통해 조건에 따라 각각의 라우터로 이동시키고 컴포넌트를 랜더한다.\r\n    // Link컴포넌트에 to속성에 라우터 URL를 지정해주고 isMovie가 true이면 /movie/${id}로 false면 /tv/${id}로 URL을 이동시키고 아래 <Container>컴포넌트를 랜더한다.\r\n    // isMovie가 true라는 의미는 영화에 대한 정보가 있다는 의미니깐 /movie 라우터로 이동시키고 false라는 의미는 영화에 대한 정보가 없고 TV에 대한 정보가 있다는 의미니깐 /tv 라우터로 이동시킨다.\r\n    <ScLink to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n      <Container>\r\n        <PosterContainer>\r\n          {/* 영화나 TV 이미지가 있는지 체크해서 있으면 imageUrl props로 `https://image.tmdb.org/t/p/w300${imageUrl}`를 전달하고 없으면 require(\"../assets/noPoster.png\")를 통해 aseets폴더 아래있는 noPoster.png 이미지를 전달한다. */}\r\n          {/* 자바스크립트의 옛날 문법인 require()함수를 통해 폴더나 파일 등을 가져올 수 있다. */}\r\n          {/* require(\"../assets/noPoster.png\")뒤에 default를 붙여준 이유는 require(\"../assets/noPoster.png\")를 콘솔창에 찍어보면 Module이라는 객체를 가져오기 때문이다.  */}\r\n          {/* 우리는 Module이라는 객체 안에 있는 default프로퍼티가 가지고 있는 경로가 필요하기 때문에 .default 붙여줘서 객체안에 있는 제대로 된 데이터 경로를 가져와야 한다. */}\r\n          {/* <Image imageUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPoster.png\").default}></Image> */}\r\n\r\n          {/* 위와 같이 require()를 통해 가져와도 되고 또 다른 방법으로는 import noPoster from \"../assets/noPoster.png\";를 통해 noPoster.png이미지를 가져와서 아래와 같이 noPoster로 넣어줄 수도 있다. */}\r\n          {/* {console.log(require(\"../assets/noPoster.png\"))} */}\r\n          <Image imageUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : noPoster}></Image>\r\n          <Overview>{overview ? `${overview.substring(0, 130)}..` : title}</Overview>\r\n          <Popularity>{/* 순위<PopularityChild>{popularity}</PopularityChild> */}Más información</Popularity>\r\n        </PosterContainer>\r\n\r\n        <ContentContainer>\r\n          {/* title.length를 체크해서 15보다 크면 substring(0,15)를 통해 0부터 15까지의 글자수만 전달하도록 한다. */}\r\n          <Title>{title.length > 15 ? `${title.substring(0, 15)}..` : title}</Title>\r\n\r\n          <YearRatingContainer>\r\n            <Year>fecha de apertura {year}</Year>\r\n            <ContentRating>\r\n              ⭐<ContentRatingChild>{rating}</ContentRatingChild>\r\n            </ContentRating>\r\n          </YearRatingContainer>\r\n        </ContentContainer>\r\n      </Container>\r\n    </ScLink>\r\n  );\r\n};\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n  overview: PropTypes.string,\r\n  popularity: PropTypes.number,\r\n};\r\n\r\nexport default Poster;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-top: 65px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  margin-top: 90px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 40px;\r\n  }\r\n`;\r\n\r\nconst TitleContent = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 40px;\r\n  color: white;\r\n  margin-bottom: 25px;\r\n  font-weight: bold;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 30px;\r\n  }\r\n`;\r\n\r\nconst SubTitle = styled.p`\r\n  font-size: 18px;\r\n  color: gray;\r\n  line-height: 1.5;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 50px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n  box-sizing: border-box;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst ButtonContent = styled.div`\r\n  display: flex;\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst ButtonLink = styled(Link)`\r\n  color: white;\r\n  border-bottom: 3px solid ${(props) => (props.current ? \"#E30914\" : \"transparent\")};\r\n  color: ${(props) => (props.current ? \"#E30914\" : \"white\")};\r\n  margin: 0 15px;\r\n  padding: 10px 10px;\r\n  box-sizing: border-box;\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 0 5px;\r\n    font-size: 13px;\r\n    font-weight: normal;\r\n  }\r\n`;\r\n\r\nconst ButtonTest = styled.button`\r\n  border: 3px solid red;\r\n  position: fixed;\r\n  bottom: 60px;\r\n  right: 50px;\r\n  cursor: pointer;\r\n  font-size: 35px;\r\n`;\r\n\r\nconst MoviePresenter = ({ nowPlaying, upcoming, popular, topRated, error, loading, nowPlaying2 }) => {\r\n  // console.log(nowPlaying, upcoming, popular, topRated, error, loading);\r\n\r\n  const {\r\n    location: { hash },\r\n  } = window;\r\n\r\n  return loading ? (\r\n    <Loader></Loader>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Netflix - Películas</title>\r\n      </Helmet>\r\n\r\n      {popular && popular.length > 0 && hash === \"#/movie\" && (\r\n        <TitleContainer>\r\n          <TitleContent>\r\n            <Title>películas populares</Title>\r\n            <SubTitle>\r\n            Obtenga una lista de películas populares actualmente.\r\n              <br />\r\n              La lista de películas se actualiza automáticamente a diario.\r\n            </SubTitle>\r\n          </TitleContent>\r\n        </TitleContainer>\r\n      )}\r\n\r\n      {nowPlaying && nowPlaying.length > 0 && hash === \"#/movie/now-playing\" && (\r\n        <TitleContainer>\r\n          <TitleContent>\r\n            <Title>Películas que se muestran actualmente</Title>\r\n            <SubTitle>\r\n            Obtenga una lista de las películas que se están reproduciendo actualmente.\r\n              <br />\r\n              Encuentra todas las películas que se proyectan en una fecha determinada.\r\n            </SubTitle>\r\n          </TitleContent>\r\n        </TitleContainer>\r\n      )}\r\n\r\n      {upcoming && upcoming.length > 0 && hash === \"#/movie/upcoming\" && (\r\n        <TitleContainer>\r\n          <TitleContent>\r\n            <Title>Películas programadas para mostrarse</Title>\r\n            <SubTitle>\r\n            Obtenga una lista de las próximas películas.\r\n              <br />\r\n              Encuentra próximas películas dentro de una fecha específica.\r\n            </SubTitle>\r\n          </TitleContent>\r\n        </TitleContainer>\r\n      )}\r\n\r\n      {topRated && topRated.length > 0 && hash === \"#/movie/top-rated\" && (\r\n        <TitleContainer>\r\n          <TitleContent>\r\n            <Title>películas altamente calificadas</Title>\r\n            <SubTitle>\r\n            Obtenga una lista de las películas mejor calificadas entre todas las películas.\r\n              <br />\r\n              Ordenar por películas mejor calificadas.\r\n            </SubTitle>\r\n          </TitleContent>\r\n        </TitleContainer>\r\n      )}\r\n\r\n      <ButtonContainer>\r\n        <ButtonContent>\r\n          <ButtonLink to=\"/movie\" current={hash === \"#/movie\" && true}>\r\n          películas populares\r\n          </ButtonLink>\r\n          <ButtonLink to=\"/movie/now-playing\" current={hash === \"#/movie/now-playing\" && true}>\r\n          mostrando actualmente\r\n          </ButtonLink>\r\n          <ButtonLink to=\"/movie/upcoming\" current={hash === \"#/movie/upcoming\" && true}>\r\n          Para ser proyectado\r\n          </ButtonLink>\r\n          <ButtonLink to=\"/movie/top-rated\" current={hash === \"#/movie/top-rated\" && true}>\r\n          películas altamente calificadas\r\n          </ButtonLink>\r\n        </ButtonContent>\r\n      </ButtonContainer>\r\n\r\n      {popular && popular.length > 0 && hash === \"#/movie\" && (\r\n        <Section title=\"인기 영화\">\r\n          {popular.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date ? movie.release_date : \"\"}\r\n              isMovie={true}\r\n              overview={movie.overview}\r\n              popularity={movie.popularity && Math.round(movie.popularity)}\r\n            ></Poster>\r\n          ))}\r\n        </Section>\r\n      )}\r\n\r\n      {nowPlaying && nowPlaying.length > 0 && hash === \"#/movie/now-playing\" && (\r\n        <Section title=\"현재 상영중\">\r\n          {nowPlaying.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date ? movie.release_date : \"\"}\r\n              isMovie={true}\r\n              overview={movie.overview}\r\n              popularity={movie.popularity && Math.round(movie.popularity)}\r\n            ></Poster>\r\n          ))}\r\n        </Section>\r\n      )}\r\n\r\n      {upcoming && upcoming.length > 0 && hash === \"#/movie/upcoming\" && (\r\n        <Section title=\"상영 예정\">\r\n          {upcoming.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date ? movie.release_date : \"\"}\r\n              isMovie={true}\r\n              overview={movie.overview}\r\n              popularity={movie.popularity && Math.round(movie.popularity)}\r\n            ></Poster>\r\n          ))}\r\n        </Section>\r\n      )}\r\n\r\n      {topRated && topRated.length > 0 && hash === \"#/movie/top-rated\" && (\r\n        <Section title=\"평점높은 영화\">\r\n          {topRated.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date ? movie.release_date : \"\"}\r\n              isMovie={true}\r\n              overview={movie.overview}\r\n              popularity={movie.popularity && Math.round(movie.popularity)}\r\n            ></Poster>\r\n          ))}\r\n        </Section>\r\n      )}\r\n\r\n      {/* {nowPlaying2 && nowPlaying2.length > 0 && (\r\n        <Section title=\"현재 상영중2\">\r\n          {nowPlaying2.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date ? movie.release_date : \"\"}\r\n              isMovie={true}\r\n              overview={movie.overview}\r\n              popularity={movie.popularity && Math.round(movie.popularity)}\r\n            ></Poster>\r\n          ))}\r\n        </Section>\r\n      )} */}\r\n\r\n      {error && <Message text={error}></Message>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nMoviePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  nowPlaying2: PropTypes.array,\r\n};\r\n\r\nexport default withRouter(MoviePresenter);\r\n","import MovieContainer from \"./MovieContainer\";\r\n\r\nexport default MovieContainer;\r\n","import React from \"react\";\r\nimport MoviePresenter from \"./MoviePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nclass MovieContainer extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    topRated: null,\r\n    error: null,\r\n    loading: true,\r\n    nowPlaying2: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n\r\n      const {\r\n        data: { results: topRated },\r\n      } = await moviesApi.topRated();\r\n\r\n      const {\r\n        data: { results: nowPlaying2 },\r\n      } = await moviesApi.nowPlaying2();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n        topRated,\r\n        nowPlaying2,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      this.setState({\r\n        error: \"Can't find Movie Information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, topRated, error, loading, nowPlaying2 } = this.state;\r\n    // console.log(this.state);\r\n\r\n    return <MoviePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} topRated={topRated} error={error} loading={loading} nowPlaying2={nowPlaying2} />;\r\n  }\r\n}\r\n\r\nexport default MovieContainer;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-top: 65px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  margin-top: 90px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 40px;\r\n  }\r\n`;\r\n\r\nconst TitleContent = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 40px;\r\n  color: white;\r\n  margin-bottom: 25px;\r\n  font-weight: bold;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 30px;\r\n  }\r\n`;\r\n\r\nconst SubTitle = styled.p`\r\n  font-size: 18px;\r\n  color: gray;\r\n  line-height: 1.5;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 50px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n  box-sizing: border-box;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst ButtonContent = styled.div`\r\n  display: flex;\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst ButtonLink = styled(Link)`\r\n  color: white;\r\n  border-bottom: 3px solid ${(props) => (props.current ? \"#E30914\" : \"transparent\")};\r\n  color: ${(props) => (props.current ? \"#E30914\" : \"white\")};\r\n  margin: 0 15px;\r\n  padding: 10px 10px;\r\n  box-sizing: border-box;\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 0 1px;\r\n    font-size: 13px;\r\n    font-weight: normal;\r\n  }\r\n`;\r\n\r\n// TVContainer로부터 받아온 props들을 파라미터로 받는다.\r\nconst TVPresenter = ({ topRated, popular, airingToday, onTheAir, error, loading }) => {\r\n  // console.log(topRated, popular, airingToday, onTheAir, error, loading);\r\n\r\n  const {\r\n    location: { hash },\r\n  } = window;\r\n\r\n  // loading을 체크해서 loading이 true일 때는 Loader컴포넌트를, false면 Container컴포넌트를 리턴한다.\r\n  // Container컴포넌트는 Section컴포넌트를 가지고 있고 Section컴포넌트로 title에 값을 넘겨주고 children에는 <Section></Section>사이의 값을 데이터로 넘겨준다.\r\n  return loading ? (\r\n    <Loader></Loader>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Netflix - TV</title>\r\n      </Helmet>\r\n\r\n      {popular && popular.length > 0 && hash === \"#/tv\" && (\r\n        <TitleContainer>\r\n          <TitleContent>\r\n            <Title>tarjeta de dibujo</Title>\r\n            <SubTitle>\r\n            Obtén una lista de los programas de televisión más populares actualmente.\r\n              <br />\r\n             La lista de programas de TV se actualiza automáticamente a diario.\r\n            </SubTitle>\r\n          </TitleContent>\r\n        </TitleContainer>\r\n      )}\r\n\r\n      {airingToday && airingToday.length > 0 && hash === \"#/tv/airing-today\" && (\r\n        <TitleContainer>\r\n          <TitleContent>\r\n            <Title>Programas que se emiten actualmente</Title>\r\n            <SubTitle>\r\n            Obtenga una lista de los programas de televisión que se transmiten actualmente.\r\n              <br />\r\n              Obtenga una lista basada en la fecha de hoy.\r\n            </SubTitle>\r\n          </TitleContent>\r\n        </TitleContainer>\r\n      )}\r\n\r\n      {onTheAir && onTheAir.length > 0 && hash === \"#/tv/on-the-air\" && (\r\n        <TitleContainer>\r\n          <TitleContent>\r\n            <Title>Programas programados para emitirse</Title>\r\n            <SubTitle>\r\n            Obtenga una lista de los próximos programas de televisión.\r\n              <br />\r\n              Encuentre programas con episodios que saldrán al aire dentro de una semana.\r\n            </SubTitle>\r\n          </TitleContent>\r\n        </TitleContainer>\r\n      )}\r\n\r\n      {topRated && topRated.length > 0 && hash === \"#/tv/top-rated\" && (\r\n        <TitleContainer>\r\n          <TitleContent>\r\n            <Title>Programas de TV calificados</Title>\r\n            <SubTitle>\r\n            Obtenga los programas mejor calificados entre todos los programas de televisión.\r\n              <br />\r\n              Ordene por programas con las calificaciones más altas.\r\n            </SubTitle>\r\n          </TitleContent>\r\n        </TitleContainer>\r\n      )}\r\n\r\n      <ButtonContainer>\r\n        <ButtonContent>\r\n          <ButtonLink to=\"/tv\" current={hash === \"#/tv\" && true}>\r\n          tarjeta de dibujo\r\n          </ButtonLink>\r\n          <ButtonLink to=\"/tv/airing-today\" current={hash === \"#/tv/airing-today\" && true}>\r\n          actualmente transmitiendo\r\n          </ButtonLink>\r\n          <ButtonLink to=\"/tv/on-the-air\" current={hash === \"#/tv/on-the-air\" && true}>\r\n          para ser transmitido\r\n          </ButtonLink>\r\n          <ButtonLink to=\"/tv/top-rated\" current={hash === \"#/tv/top-rated\" && true}>\r\n          programa altamente calificado\r\n          </ButtonLink>\r\n        </ButtonContent>\r\n      </ButtonContainer>\r\n\r\n      {popular && popular.length > 0 && hash === \"#/tv\" && (\r\n        <Section title=\"인기 프로그램\">\r\n          {popular.map((tv) => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date ? tv.first_air_date : \"\"}\r\n              isMovie={false}\r\n              popularity={tv.popularity && Math.round(tv.popularity)}\r\n            ></Poster>\r\n          ))}\r\n        </Section>\r\n      )}\r\n\r\n      {airingToday && airingToday.length > 0 && hash === \"#/tv/airing-today\" && (\r\n        <Section title=\"현재 방영중\">\r\n          {airingToday.map((tv) => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date ? tv.first_air_date : \"\"}\r\n              isMovie={false}\r\n              popularity={tv.popularity && Math.round(tv.popularity)}\r\n            ></Poster>\r\n          ))}\r\n        </Section>\r\n      )}\r\n\r\n      {onTheAir && onTheAir.length > 0 && hash === \"#/tv/on-the-air\" && (\r\n        <Section title=\"방영 예정\">\r\n          {onTheAir.map((tv) => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date ? tv.first_air_date : \"\"}\r\n              isMovie={false}\r\n              popularity={tv.popularity && Math.round(tv.popularity)}\r\n            ></Poster>\r\n          ))}\r\n        </Section>\r\n      )}\r\n\r\n      {topRated && topRated.length > 0 && hash === \"#/tv/top-rated\" && (\r\n        <Section title=\"programa altamente calificado\">\r\n          {topRated.map((tv) => (\r\n            // TVPresenter는 Poster컴포넌트에게 각각의 tv에 대한 데이터를 props로 넘겨준다.\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date ? tv.first_air_date : \"\"}\r\n              isMovie={false}\r\n              popularity={tv.popularity && Math.round(tv.popularity)}\r\n            ></Poster>\r\n          ))}\r\n        </Section>\r\n      )}\r\n\r\n      {error && <Message text={error}></Message>}\r\n    </Container>\r\n  );\r\n};\r\n\r\n// PropTypes를 통해 받아온 props들의 타입들을 검사한다.\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  onTheAir: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TYPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nclass TVContainer extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    onTheAir: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  // componentDidMount를 통해 컴포넌트가 생성되고 난 후 실행시킬 코드를 안에 넣어준다.\r\n  async componentDidMount() {\r\n    // try, catch, finally처리를 해주고 tvApi객체에서 topRated()함수를 실행해서 api를 통해 데이터를 가져오도록 한다.\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n\r\n      const {\r\n        data: { results: onTheAir },\r\n      } = await tvApi.onTheAir();\r\n\r\n      // console.log(topRated, popular, airingToday, onTheAir);\r\n\r\n      // throw Error();\r\n\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n        onTheAir,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV Information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, onTheAir, error, loading } = this.state;\r\n    // console.log(this.state);\r\n\r\n    return <TYPresenter topRated={topRated} popular={popular} airingToday={airingToday} onTheAir={onTheAir} error={error} loading={loading} />;\r\n  }\r\n}\r\n\r\nexport default TVContainer;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 160px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-top: 110px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n  font-size: 30px;\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  line-height: 1.6;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 19px;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  position: relative;\r\n  margin-bottom: 80px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 85%;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  /* all: unset: 기본적으로 가지고 있는 태그의 스타일 속성을 초기화시킨다. */\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  background-color: transparent;\r\n  width: 660px;\r\n  padding: 15px 20px;\r\n  background-color: white;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    font-size: 14px;\r\n    padding: 15px 10px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  outline: none;\r\n  font-size: 20px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: #e30914;\r\n  color: white;\r\n  padding: 14px 30px;\r\n  cursor: pointer;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst ButtonContent = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ButtonLink = styled(Link)`\r\n  color: white;\r\n  border-bottom: 3px solid ${(props) => (props.current ? \"#E30914\" : \"transparent\")};\r\n  color: ${(props) => (props.current ? \"#E30914\" : \"white\")};\r\n  margin: 0 15px;\r\n  padding: 10px 10px;\r\n  box-sizing: border-box;\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 0 5px;\r\n    font-size: 15px;\r\n    font-weight: normal;\r\n  }\r\n`;\r\n\r\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, error, loading, handleSubmit, updateSearchTerm }) => {\r\n  // console.log(\"movieResults\", movieResults);\r\n  // console.log(\"tvResults\", tvResults);\r\n\r\n  const {\r\n    location: { hash },\r\n  } = window;\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Netflix - Búsqueda</title>\r\n      </Helmet>\r\n\r\n      <Title>\r\n      Hay millones de películas y programas de televisión.\r\n        <br />\r\n        Busque ahora mismo.\r\n      </Title>\r\n\r\n      {/* onSubmit속성을 통해 Submit이벤트가 발생했을 때 handleSubmit함수를 실행한다. */}\r\n      <Form onSubmit={handleSubmit}>\r\n        {/* form태그안에는 input태그가 있고 input태그의 value로는 state안에 있는 searchTerm을 가져온다. */}\r\n        {/* onChange속성을 통해 input에 변화가 생겼을 때 updateSearchTerm함수를 실행한다. */}\r\n        <Input placeholder=\"Busca una película o un programa de televisión.\" value={searchTerm} onChange={updateSearchTerm}></Input>\r\n        <Button onSubmit={handleSubmit}>buscar</Button>\r\n      </Form>\r\n\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : (\r\n        <>\r\n          <ButtonContainer>\r\n            <ButtonContent>\r\n              <ButtonLink to=\"/search\" current={hash === \"#/search\" && true}>\r\n              película\r\n              </ButtonLink>\r\n              <ButtonLink to=\"/search/result-tv\" current={hash === \"#/search/result-tv\" && true}>\r\n                TV programa\r\n              </ButtonLink>\r\n            </ButtonContent>\r\n          </ButtonContainer>\r\n\r\n          {movieResults && movieResults.length > 0 && hash === \"#/search\" && (\r\n            <Section title=\"영화\">\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date ? movie.release_date : \"\"}\r\n                  isMovie={true}\r\n                  popularity={movie.popularity && Math.round(movie.popularity)}\r\n                ></Poster>\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && hash === \"#/search/result-tv\" && (\r\n            <Section title=\"TV 프로그램\">\r\n              {tvResults.map((tv) => (\r\n                <Poster\r\n                  key={tv.id}\r\n                  id={tv.id}\r\n                  imageUrl={tv.poster_path}\r\n                  title={tv.name}\r\n                  rating={tv.vote_average}\r\n                  year={tv.first_air_date ? tv.first_air_date : \"\"}\r\n                  isMovie={false}\r\n                  popularity={tv.popularity && Math.round(tv.popularity)}\r\n                ></Poster>\r\n              ))}\r\n            </Section>\r\n          )}\r\n        </>\r\n      )}\r\n      {error && <Message text={error}></Message>}\r\n\r\n      {/* Search페이지에서 영화나 TV를 검색했을 때 만약 리스트에 없는 영화나 TV면 <Message>컴포넌트를 랜더한다. */}\r\n      {/* 검색했을 때 movieResults가 true이고 tvResults가 true이고, movieResults의 길이가 0이고 tvResults의 길이가 0이면 <Message>컴포넌트를 랜더한다. */}\r\n      {/* 검색했을 때 검색한 것이 영화나 TV에 없다면 movieResults와 tvResults는 빈 배열([])이 반환되지만, 빈 배열 또한 Boolean([])으로 확인해보면 true를 반환하므로 아래 코드가 작동하는 것이다. */}\r\n      {/* 그래서 만약 검색한 것이 없다면 <Message>컴포넌트의 text props로 \"Nothing Found\"를 전달해준다. */}\r\n      {movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 && <Message text=\"Nothing Found\"></Message>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateSearchTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nclass SearchContainer extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    lodaing: false,\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   this.handleSubmit();\r\n  // }\r\n\r\n  // handleSubmit은 form에서 텍스트를 입력하고 엔터를 눌렀을 때 실행되는 함수이다.\r\n  // 주의!!! 만약 리액트에서 컴포넌트 안에서만 쓰일 componentDidMount같은 함수면 componentDidMount(){}형태로 만들어줘도 상관없지만\r\n  // handleSubmit이나 updateSearchTerm같이 SearchPresenter.js같은 곳에서 onChange등의 이벤트에 맞춰서 실행될 함수라면\r\n  // this.updateTerm.bind(this)처럼 .bind(this)를 통해 바인딩을 해주거나 아니면 처음부터 함수를 생성할 때 handleSubmit(){}가 아닌 handleSubmit = () => {}형태로 화살표함수로 만들어주는 것이 좋다.\r\n  // 화살표 함수로 만들어주면 자동으로 바인딩되기 때문에 바인딩을 안해줘도 된다.\r\n  // 만약 위와 같이 바인딩을 해주지 않거나 화살표함수 형태로 만들지 않고 onChange이벤트등에서 사용하게 되면 TypeError Cannot read property 'setState' of undefined와 같은 에러가 발생할 수 있다.\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // handleSubmit함수는 state안에 있는 searchTerm을 가져와서 확인하고 그것이 빈 값이 아니면 searchByTerm함수를 실행한다.\r\n    const { searchTerm } = this.state;\r\n\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  // updateSearchTerm 함수는 사용자가 input에서 입력한 값을 value로 받아온다.\r\n  // value로 받아와서 setState함수를 통해 searchTerm에 넣는다.\r\n  updateSearchTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    // console.log(value);\r\n\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  // searchByTerm함수는 state안에 있는 searchTerm을 가져와서 각각 moviesApi.search()와 tvApi.search()의 인자로 전달해준다.\r\n  // 그래서 영화와 tv데이터에서 사용자가 검색한 searchTerm에 해당하는 데이터들을 가져와준다.\r\n  // 그리고 그 데이터들을 state의 movieResults와 tvResults에 넣는다.\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n\r\n      // console.log(movieResults, tvResults);\r\n\r\n      // throw Error();\r\n\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n        loading: true,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      this.setState({\r\n        error: \"Can't fint Results.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n    // console.log(this.state);\r\n\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateSearchTerm={this.updateSearchTerm}\r\n      ></SearchPresenter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchContainer;\r\n","export default __webpack_public_path__ + \"static/media/noActor.a6410c2b.png\";","export default __webpack_public_path__ + \"static/media/noCompany2.1d3da6d7.png\";","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Footer from \"Components/Footer\";\r\nimport Helmet from \"react-helmet\";\r\nimport noPoster from \"../../assets/noPoster.png\";\r\nimport noActor from \"../../assets/noActor.png\";\r\nimport noCompany2 from \"../../assets/noCompany2.png\";\r\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\r\nimport \"@splidejs/splide/dist/css/themes/splide-default.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst BlurBackground = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: url(${(props) => props.imageUrl}) no-repeat center center;\r\n  background-size: cover;\r\n  filter: blur(5px);\r\n  opacity: 0.2;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  flex-direction: column;\r\n  font-family: \"Do Hyeon\", sans-serif;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 0 15px;\r\n  }\r\n`;\r\n\r\nconst CoverContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 1280px;\r\n  max-width: 1280px;\r\n  color: white;\r\n  margin-top: 120px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-top: 75px;\r\n  }\r\n`;\r\n\r\nconst CoverLink = styled.a`\r\n  width: 340px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 340px;\r\n  height: 510px;\r\n  background: url(${(props) => props.imageUrl}) no-repeat center center;\r\n  background-size: cover;\r\n  border-radius: 15px;\r\n  box-shadow: rgb(0 0 0 / 50%) 0px 7px 10px, rgb(0 0 0 / 24%) 0px -12px 30px, rgb(0 0 0 / 24%) 0px 4px 6px, rgb(0 0 0 / 34%) 0px 12px 13px, rgb(0 0 0 / 18%) 0px -3px 5px;\r\n  transition: 0.5s;\r\n\r\n  &:hover {\r\n    transform: scale(1.03);\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 260px;\r\n    height: 400px;\r\n  }\r\n`;\r\n\r\nconst CoverHeading = styled.div`\r\n  display: flex;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst CoverMiddle = styled.div``;\r\n\r\nconst Data = styled.div`\r\n  padding-left: 45px;\r\n\r\n  @media (max-width: 768px) {\r\n    padding-left: 0;\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin-bottom: 20px;\r\n  font-size: 36px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 30px;\r\n  }\r\n`;\r\n\r\nconst SubTitle = styled.h2`\r\n  font-size: 22px;\r\n  margin-top: 25px;\r\n  margin-bottom: 16px;\r\n  font-style: italic;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 18px;\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst GenreContainer = styled.div`\r\n  font-size: 18px;\r\n  color: gray;\r\n  margin-bottom: 6px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst DateRunTimeContainer = styled.div`\r\n  font-size: 18px;\r\n  color: gray;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst VoteContainer = styled.div`\r\n  font-size: 18px;\r\n  color: white;\r\n  margin-top: 14px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst VoteStrong = styled.strong`\r\n  font-size: 22px;\r\n  color: dodgerblue;\r\n  margin-left: 7px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Divider = styled.span`\r\n  color: gray;\r\n  font-size: 18px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 20px;\r\n  line-height: 1.6;\r\n  letter-spacing: 1px;\r\n  margin-top: 30px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 17px;\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Keywords = styled.div`\r\n  margin-top: 35px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst KeywordTitle = styled.h1`\r\n  font-size: 18px;\r\n  color: gray;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst KeywordContent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst KeywordSpan = styled.span`\r\n  color: #fed330;\r\n  border: 1px solid #fed330;\r\n  background-color: transparent;\r\n  padding: 7px 12px;\r\n  box-sizing: border-box;\r\n  margin-right: 8px;\r\n  margin-bottom: 8px;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n  font-size: 17px;\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    color: white;\r\n    background-color: #fed330;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst TeaserContainer = styled.div`\r\n  border-top: 1px solid gray;\r\n  margin-top: 100px;\r\n  padding-top: 30px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst TeaserTitle = styled.h1`\r\n  font-size: 25px;\r\n`;\r\n\r\nconst TeaserVideo = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  margin-top: 25px;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst IframeContainer = styled.div`\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-bottom: 50px;\r\n    border-bottom: 1px solid gray;\r\n    padding-bottom: 30px;\r\n\r\n    &:last-child {\r\n      margin-bottom: 0px;\r\n      border-bottom: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Iframe = styled.iframe`\r\n  margin-right: 15px;\r\n\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-right: 0px;\r\n  }\r\n`;\r\n\r\nconst IframeDesc = styled.h2`\r\n  margin-top: 12px;\r\n  font-size: 20px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 10px;\r\n    font-size: 19px;\r\n  }\r\n`;\r\n\r\nconst ActorContainer = styled.div`\r\n  border-top: 1px solid gray;\r\n  margin-top: 100px;\r\n  padding-top: 30px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst ActorTitle = styled.h1`\r\n  font-size: 25px;\r\n`;\r\n\r\nconst ActorImageContainer = styled.div`\r\n  display: flex;\r\n  margin-top: 25px;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nconst ActorImage = styled.div`\r\n  margin-right: 30px;\r\n  text-align: center;\r\n  width: 120px;\r\n\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100px;\r\n    margin-right: 15px;\r\n    margin-bottom: 22px;\r\n  }\r\n`;\r\n\r\nconst ActorPhoto = styled.div`\r\n  background: url(${(props) => (props.bgUrl ? `https://image.tmdb.org/t/p/w500${props.bgUrl}` : noActor)}) no-repeat center center;\r\n  background-size: cover;\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n  border: 5px solid white;\r\n\r\n  &:hover {\r\n    border: 5px solid #fed330;\r\n    transform: scale(1.08);\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n`;\r\n\r\nconst ActorName = styled.h2`\r\n  margin-top: 15px;\r\n  height: 30px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst ActorCharacter = styled.p`\r\n  color: gray;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 8px;\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst CompanyContainer = styled.div`\r\n  margin-top: 80px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst CompanyTitle = styled.div`\r\n  font-size: 25px;\r\n`;\r\n\r\nconst CompanyContent = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst CompanyName = styled.h2`\r\n  font-size: 22px;\r\n  margin-top: 20px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst CompanyImage = styled.div`\r\n  background: url(${(props) => (props.bgUrl ? `https://image.tmdb.org/t/p/w500${props.bgUrl}` : noCompany2)}) no-repeat center left;\r\n  background-size: contain;\r\n  height: 70px;\r\n  max-height: 70px;\r\n`;\r\n\r\nconst CompanyMoney = styled.div`\r\n  font-size: 20px;\r\n  margin-top: 15px;\r\n  display: flex;\r\n  color: white;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst CompanyDivider = styled.div`\r\n  margin: 0 8px;\r\n`;\r\n\r\nconst Budget = styled.h2``;\r\n\r\nconst Revenue = styled.h2``;\r\n\r\nconst SplideContainer = styled.div`\r\n  border-top: 1px solid gray;\r\n  margin-top: 100px;\r\n  padding-top: 30px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst SplideTitle = styled.h1`\r\n  font-size: 25px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst SplideLink = styled.a`\r\n  height: 100%;\r\n  display: inline-block;\r\n`;\r\n\r\nconst SplideImage = styled.img`\r\n  width: 100%;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ReviewContainer = styled.div`\r\n  border-top: 1px solid gray;\r\n  margin-top: 100px;\r\n  padding-top: 30px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst ReviewTitle = styled.h1`\r\n  font-size: 25px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst ReviewContent = styled.div``;\r\n\r\nconst Review = styled.div`\r\n  display: flex;\r\n  margin-bottom: 50px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\n\r\nconst ReviewImageContent = styled.div``;\r\n\r\nconst ReviewImage = styled.img`\r\n  width: 75px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst ReviewSubContent = styled.div`\r\n  margin-left: 22px;\r\n`;\r\n\r\nconst ReviewName = styled.span`\r\n  font-size: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 17px;\r\n  }\r\n`;\r\n\r\nconst ReviewDivider = styled.span`\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 17px;\r\n    margin-left: 7px;\r\n    margin-right: 7px;\r\n  }\r\n`;\r\n\r\nconst ReviewDate = styled.span`\r\n  color: white;\r\n  font-size: 18px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 17px;\r\n  }\r\n`;\r\n\r\nconst ReviewRating = styled.span`\r\n  color: gold;\r\n  font-size: 20px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 19px;\r\n  }\r\n`;\r\n\r\nconst ReviewOverview = styled.p`\r\n  margin-top: 13px;\r\n  margin-bottom: 10px;\r\n  line-height: 1.5;\r\n  font-size: 17px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 20px;\r\n  border-radius: 0px 12px 12px 12px;\r\n  box-sizing: border-box;\r\n  border: 3px solid white;\r\n  cursor: pointer;\r\n  color: white;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nconst ReviewLink = styled.a`\r\n  color: white;\r\n\r\n  &:visited {\r\n    color: white;\r\n  }\r\n  &:active {\r\n    color: white;\r\n  }\r\n  &:link {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst RecommendContainer = styled.div`\r\n  border-top: 1px solid gray;\r\n  margin-top: 100px;\r\n  width: 100%;\r\n  color: white;\r\n  padding: 30px 0px;\r\n  padding-bottom: 120px;\r\n  max-width: 1600px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    padding-bottom: 40px;\r\n  }\r\n`;\r\n\r\nconst RecommendTitle = styled.h1`\r\n  font-size: 25px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst RecommendContent = styled.div`\r\n  border-radius: 7px;\r\n`;\r\n\r\nconst RecommendSubContent = styled.div`\r\n  transition: 0.5s;\r\n  box-shadow: rgb(0 0 0 / 35%) 0px 4px 6px 0px;\r\n  border-radius: 7px;\r\n\r\n  &:hover {\r\n    transform: scale(1.03);\r\n  }\r\n`;\r\n\r\nconst RecommendLink = styled.a`\r\n  display: block;\r\n  background: rgba(0, 0, 0, 0.5) url(${(props) => (props.bgUrl ? `https://image.tmdb.org/t/p/original${props.bgUrl}` : noPoster)}) no-repeat center center;\r\n  background-size: cover;\r\n  height: 270px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  border-radius: 7px;\r\n  color: white;\r\n`;\r\n\r\nconst RecommendSubTitle = styled.div`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 10px;\r\n`;\r\n\r\nconst RecommendName = styled.div`\r\n  font-size: 17px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst RecommendRating = styled.div`\r\n  font-size: 15px;\r\n`;\r\n\r\nconst GototopButton = styled.button`\r\n  position: fixed;\r\n  bottom: 60px;\r\n  right: 60px;\r\n  z-index: 200;\r\n  width: 50px;\r\n  height: 50px;\r\n  background: linear-gradient(to right, #536976, #292e49);\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: none;\r\n  box-shadow: rgb(0 0 0 / 50%) 0px 0px 3px 2px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 45px;\r\n    height: 45px;\r\n    bottom: 20px;\r\n    right: 20px;\r\n  }\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading = true, isMovie, recommendations, cast, keywords, reviews, backdrops, posters, tvDetail2 }) => {\r\n  const checkPC = \"win16|win32|win64|macintel|mac|\";\r\n  const checkPCMobileBool = checkPC.indexOf(navigator.platform.toLowerCase()) < 0;\r\n\r\n  return loading ? (\r\n    <Loader></Loader>\r\n  ) : error ? (\r\n    <Message></Message>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{result.title ? result.title : result.name}</title>\r\n      </Helmet>\r\n\r\n      {/* {console.log(result.backdrop_path)} */}\r\n      {/* BlurBackground컴포넌트는 result안에 있는 backdrop_path를 가져오고 만약 있으면 https://image.tmdb.org/t/p/original${result.backdrop_path}를, 없으면 noPoster변수를 imageUrl props로 전달한다. */}\r\n      <BlurBackground imageUrl={result.backdrop_path ? `https://image.tmdb.org/t/p/original${result.backdrop_path}` : `https://image.tmdb.org/t/p/original${result.poster_path}`}></BlurBackground>\r\n      <Content>\r\n        <CoverContainer>\r\n          <CoverHeading>\r\n            <CoverLink href={result.homepage ? result.homepage : \"#\"}>\r\n              <Cover imageUrl={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : `https://image.tmdb.org/t/p/original${result.backdrop_path}`}></Cover>\r\n            </CoverLink>\r\n            <Data>\r\n              <Title>{result.title ? result.title : result.name}</Title>\r\n              <SubTitle>{result.tagline ? result.tagline : \"\"}</SubTitle>\r\n              <GenreContainer>\r\n                {/* {조건 ? 참: 거짓}과 {조건 && 구문}의 차이점 */}\r\n                {/* {조건 ? 참: 거짓} : 조건이 true이면 참, false이면 거짓을 실행한다. {조건 && 구문} : 조건이 true이면 && 뒤에 구문을 실행한다. */}\r\n                {/* 만약 result.genres가 존재해서 true면 result.genres.map()함수를 실행한다. */}\r\n                {/* result.genres.map()함수는 매개변수로 genres와 index를 받고 index와 result.genres배열의 길이가 같아지면 genre.name를 출력하고 그렇지 않을 때는 genre.name /을 출력한다. */}\r\n                {/* Family / Drama 이런식으로 맨 마지막 장르 Drama에서는 /가 붙지 않게 하기 위해서 아래와 같이 코드를 짰다. */}\r\n                <Item>{result.genres && result.genres.map((genre, index) => (index === result.genres.length - 1 ? genre.name : `${genre.name}▪`))}</Item>\r\n              </GenreContainer>\r\n              <DateRunTimeContainer>\r\n                <Item>{result.release_date ? result.release_date : result.first_air_date}</Item>\r\n                <Divider>▪</Divider>\r\n                <Item>{result.runtime || result.runtime === 0 ? result.runtime : result.episode_run_time[0]}분</Item>\r\n              </DateRunTimeContainer>\r\n              <VoteContainer>\r\n                <Item>\r\n                  평점\r\n                  <VoteStrong>{result.vote_average && result.vote_average}</VoteStrong>\r\n                </Item>\r\n              </VoteContainer>\r\n              <Overview>{result.overview && result.overview}</Overview>\r\n              <Keywords>\r\n                <KeywordTitle>palabra clave</KeywordTitle>\r\n                <KeywordContent>{keywords.length > 0 ? keywords.map((keyword, index) => index < 15 && <KeywordSpan>{keyword.name && \"#\" + keyword.name}</KeywordSpan>) : \"\"}</KeywordContent>\r\n              </Keywords>\r\n            </Data>\r\n          </CoverHeading>\r\n\r\n          <CoverMiddle>\r\n            <TeaserContainer>\r\n              <TeaserTitle>remolque</TeaserTitle>\r\n              <TeaserVideo>\r\n                {isMovie === true && result.videos && result.videos.results[0] && result.videos.results[0].key && (\r\n                  <IframeContainer>\r\n                    <Iframe\r\n                      src={`https://www.youtube.com/embed/${result.videos.results[0].key}?playlist=${result.videos.results[0].key}`}\r\n                      width=\"420\"\r\n                      height=\"280\"\r\n                      frameborder=\"0\"\r\n                      allow=\"autoplay; fullscreen\"\r\n                    ></Iframe>\r\n                    <IframeDesc>{result.videos.results[0].name && result.videos.results[0].name}</IframeDesc>\r\n                  </IframeContainer>\r\n                )}\r\n\r\n                {isMovie === true && result.videos && result.videos.results[1] && result.videos.results[1].key && (\r\n                  <IframeContainer>\r\n                    <Iframe\r\n                      src={`https://www.youtube.com/embed/${result.videos.results[1].key}?playlist=${result.videos.results[1].key}`}\r\n                      width=\"420\"\r\n                      height=\"280\"\r\n                      frameborder=\"0\"\r\n                      allow=\"autoplay; fullscreen\"\r\n                    ></Iframe>\r\n                    <IframeDesc>{result.videos.results[1].name && result.videos.results[1].name}</IframeDesc>\r\n                  </IframeContainer>\r\n                )}\r\n\r\n                {isMovie === true && result.videos && result.videos.results[2] && result.videos.results[2].key && (\r\n                  <IframeContainer>\r\n                    <Iframe\r\n                      src={`https://www.youtube.com/embed/${result.videos.results[2].key}?playlist=${result.videos.results[2].key}`}\r\n                      width=\"420\"\r\n                      height=\"280\"\r\n                      frameborder=\"0\"\r\n                      allow=\"autoplay; fullscreen\"\r\n                    ></Iframe>\r\n                    <IframeDesc>{result.videos.results[2].name && result.videos.results[2].name}</IframeDesc>\r\n                  </IframeContainer>\r\n                )}\r\n\r\n                {isMovie === false && tvDetail2.length > 0 && tvDetail2[0] && tvDetail2[0].key && (\r\n                  <IframeContainer>\r\n                    <Iframe src={`https://www.youtube.com/embed/${tvDetail2[0].key}?playlist=${tvDetail2[0].key}`} width=\"420\" height=\"280\" frameborder=\"0\" allow=\"autoplay; fullscreen\"></Iframe>\r\n                    <IframeDesc>{tvDetail2[0].name && tvDetail2[0].name}</IframeDesc>\r\n                  </IframeContainer>\r\n                )}\r\n\r\n                {isMovie === false && tvDetail2.length > 0 && tvDetail2[1] && tvDetail2[1].key && (\r\n                  <IframeContainer>\r\n                    <Iframe src={`https://www.youtube.com/embed/${tvDetail2[1].key}?playlist=${tvDetail2[1].key}`} width=\"420\" height=\"280\" frameborder=\"0\" allow=\"autoplay; fullscreen\"></Iframe>\r\n                    <IframeDesc>{tvDetail2[1].name && tvDetail2[1].name}</IframeDesc>\r\n                  </IframeContainer>\r\n                )}\r\n\r\n                {isMovie === false && tvDetail2.length > 0 && tvDetail2[2] && tvDetail2[2].key && (\r\n                  <IframeContainer>\r\n                    <Iframe src={`https://www.youtube.com/embed/${tvDetail2[2].key}?playlist=${tvDetail2[2].key}`} width=\"420\" height=\"280\" frameborder=\"0\" allow=\"autoplay; fullscreen\"></Iframe>\r\n                    <IframeDesc>{tvDetail2[2].name && tvDetail2[2].name}</IframeDesc>\r\n                  </IframeContainer>\r\n                )}\r\n              </TeaserVideo>\r\n            </TeaserContainer>\r\n\r\n            <ActorContainer>\r\n              <ActorTitle>actor</ActorTitle>\r\n              <ActorImageContainer>\r\n                {cast &&\r\n                  cast.map((cast, index) =>\r\n                    index < 6 ? (\r\n                      <ActorImage>\r\n                        <ActorPhoto bgUrl={cast.profile_path && cast.profile_path}></ActorPhoto>\r\n                        <ActorName>{cast.name && cast.name}</ActorName>\r\n                        <ActorCharacter>{cast.character && cast.character}</ActorCharacter>\r\n                      </ActorImage>\r\n                    ) : (\r\n                      \"\"\r\n                    )\r\n                  )}\r\n              </ActorImageContainer>\r\n              <CompanyContainer>\r\n                <CompanyTitle>productor</CompanyTitle>\r\n                <CompanyContent>\r\n                  <CompanyImage\r\n                    bgUrl={result.production_companies.length > 0 && result.production_companies[0] && result.production_companies[0].logo_path && result.production_companies[0].logo_path}\r\n                  ></CompanyImage>\r\n                  <CompanyName>\r\n                    {result.production_companies.length > 0 && result.production_companies[0] && result.production_companies[0].name && result.production_companies[0].name} (\r\n                    {result.production_companies.length > 0 && result.production_companies[0] && result.production_companies[0].origin_country && result.production_companies[0].origin_country})\r\n                  </CompanyName>\r\n                </CompanyContent>\r\n                <CompanyMoney>\r\n                  {isMovie === true && (\r\n                    <>\r\n                      <Budget>💰presupuesto: ${result.budget && result.budget.toLocaleString(\"KR\")}</Budget>\r\n                      <CompanyDivider>|</CompanyDivider>\r\n                      <Revenue>💰ingresos: ${result.revenue && result.revenue.toLocaleString(\"KR\")}</Revenue>\r\n                    </>\r\n                  )}\r\n                </CompanyMoney>\r\n              </CompanyContainer>\r\n            </ActorContainer>\r\n\r\n            <SplideContainer>\r\n              <SplideTitle>todavía cortado</SplideTitle>\r\n\r\n              {checkPCMobileBool ? (\r\n                <Splide\r\n                  options={{\r\n                    rewind: true,\r\n                    perPage: 2,\r\n                    perMove: 2,\r\n                    gap: \"1rem\",\r\n                  }}\r\n                >\r\n                  {backdrops &&\r\n                    backdrops.map(\r\n                      (backdrop) =>\r\n                        backdrop.file_path && (\r\n                          <SplideSlide>\r\n                            <SplideLink href={`https://image.tmdb.org/t/p/original${backdrop.file_path}`} target=\"_blank\">\r\n                              <SplideImage src={`https://image.tmdb.org/t/p/original${backdrop.file_path}`} alt=\"\" />\r\n                            </SplideLink>\r\n                          </SplideSlide>\r\n                        )\r\n                    )}\r\n                </Splide>\r\n              ) : (\r\n                <Splide\r\n                  options={{\r\n                    rewind: true,\r\n                    perPage: 3,\r\n                    perMove: 1,\r\n                    gap: \"1rem\",\r\n                  }}\r\n                >\r\n                  {backdrops &&\r\n                    backdrops.map(\r\n                      (backdrop) =>\r\n                        backdrop.file_path && (\r\n                          <SplideSlide>\r\n                            <SplideLink href={`https://image.tmdb.org/t/p/original${backdrop.file_path}`} target=\"_blank\">\r\n                              <SplideImage src={`https://image.tmdb.org/t/p/original${backdrop.file_path}`} alt=\"\" />\r\n                            </SplideLink>\r\n                          </SplideSlide>\r\n                        )\r\n                    )}\r\n                </Splide>\r\n              )}\r\n            </SplideContainer>\r\n\r\n            <ReviewContainer>\r\n              <ReviewTitle>revisión ({reviews ? reviews.length : \"0\"})</ReviewTitle>\r\n              <ReviewContent>\r\n                {reviews &&\r\n                  reviews.map(\r\n                    (review, index) =>\r\n                      index < 5 && (\r\n                        <Review>\r\n                          <ReviewImageContent>\r\n                            <ReviewImage src={noActor}></ReviewImage>\r\n                          </ReviewImageContent>\r\n                          <ReviewSubContent>\r\n                            <ReviewName>\r\n                              {review.author ? review.author.substring(0, 15) : review.author_details.username.substring(0, 15)}\r\n                              <ReviewDivider>|</ReviewDivider>\r\n                              <ReviewDate>{review.created_at && review.created_at.substring(0, 10)}</ReviewDate>\r\n                              <ReviewDivider>|</ReviewDivider>\r\n                              <ReviewRating>calificación{review.author_details.rating && review.author_details.rating}</ReviewRating>\r\n                            </ReviewName>\r\n                            <ReviewOverview>\r\n                              {checkPCMobileBool ? (\r\n                                <ReviewLink href={review.url && review.url}>{review.content && review.content.substring(0, 150) + \"..\"}</ReviewLink>\r\n                              ) : (\r\n                                <ReviewLink href={review.url && review.url}>{review.content && review.content.substring(0, 900) + \"..\"}</ReviewLink>\r\n                              )}\r\n                            </ReviewOverview>\r\n                          </ReviewSubContent>\r\n                        </Review>\r\n                      )\r\n                  )}\r\n              </ReviewContent>\r\n            </ReviewContainer>\r\n          </CoverMiddle>\r\n        </CoverContainer>\r\n        <RecommendContainer>\r\n          <RecommendTitle>Películas / programas recomendados</RecommendTitle>\r\n          <RecommendContent>\r\n            {checkPCMobileBool ? (\r\n              <Splide options={{ rewind: true, perPage: 2, perMove: 2, gap: \"1rem\" }}>\r\n                {recommendations &&\r\n                  recommendations.map((recommendation) => (\r\n                    <SplideSlide>\r\n                      <RecommendSubContent>\r\n                        <RecommendLink\r\n                          href={recommendation.media_type === \"movie\" ? `https://netflix-gw.netlify.app/#/movie/${recommendation.id}` : `https://netflix-gw.netlify.app/#/tv/${recommendation.id}`}\r\n                          bgUrl={recommendation.poster_path && recommendation.poster_path}\r\n                          target=\"_blank\"\r\n                        >\r\n                          <RecommendSubTitle>\r\n                            <RecommendName>{recommendation.title ? recommendation.title : recommendation.name}</RecommendName>\r\n                            <RecommendRating>⭐{String(recommendation.vote_average && recommendation.vote_average).substring(0, 3)}</RecommendRating>\r\n                          </RecommendSubTitle>\r\n                        </RecommendLink>\r\n                      </RecommendSubContent>\r\n                    </SplideSlide>\r\n                  ))}\r\n              </Splide>\r\n            ) : (\r\n              <Splide options={{ rewind: true, perPage: 8, perMove: 1, gap: \"1rem\" }}>\r\n                {recommendations &&\r\n                  recommendations.map((recommendation) => (\r\n                    <SplideSlide>\r\n                      <RecommendSubContent>\r\n                        <RecommendLink\r\n                          href={recommendation.media_type === \"movie\" ? `https://netflix-gw.netlify.app/#/movie/${recommendation.id}` : `https://netflix-gw.netlify.app/#/tv/${recommendation.id}`}\r\n                          bgUrl={recommendation.poster_path && recommendation.poster_path}\r\n                          target=\"_blank\"\r\n                        >\r\n                          <RecommendSubTitle>\r\n                            <RecommendName>{recommendation.title ? recommendation.title : recommendation.name}</RecommendName>\r\n                            <RecommendRating>⭐{String(recommendation.vote_average && recommendation.vote_average).substring(0, 3)}</RecommendRating>\r\n                          </RecommendSubTitle>\r\n                        </RecommendLink>\r\n                      </RecommendSubContent>\r\n                    </SplideSlide>\r\n                  ))}\r\n              </Splide>\r\n            )}\r\n          </RecommendContent>\r\n        </RecommendContainer>\r\n      </Content>\r\n      <Footer></Footer>\r\n      <GototopButton onClick={() => window.scrollTo(0, 0)}>\r\n        <i class=\"fas fa-arrow-up\" style={{ color: \"white\", fontSize: \"25px\" }}></i>\r\n      </GototopButton>\r\n    </Container>\r\n  );\r\n};\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  isMovie: PropTypes.bool,\r\n  recommendations: PropTypes.array,\r\n  cast: PropTypes.array,\r\n  keywords: PropTypes.array,\r\n  reviews: PropTypes.array,\r\n  backdrops: PropTypes.array,\r\n  posters: PropTypes.array,\r\n  tvDetail2: PropTypes.array,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport { moviesApi, tvApi } from \"api\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nclass DetailContainer extends React.Component {\r\n  // constructor함수안에 state를 넣어서 관리할 수도 있다.\r\n  // constructor함수안에 들어가게 되면 state앞에 this를 붙여줘야 한다.\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n\r\n    // includes()메서드를 이용해서 ()괄호안에 값이 포함되는지를 검사한다.\r\n    // 포함된다면 true, 포함되지 않았다면 false를 반환한다.\r\n    // isMovie를 state안에 넣어서 관리할 수도 있고, state밖에서 this.isMovie=pathname.includes(\"/movie/\")를 통해 생성해서 관리할 수도 있다.\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      lodaing: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n      recommendations: null,\r\n      cast: null,\r\n      keywords: null,\r\n      reviews: null,\r\n      backdrops: null,\r\n      posters: null,\r\n      tvDetail2: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // react-router-dom은 기본적으로 각각의 라우트들에게 props에 대한 정보를 준다.\r\n    // this.props안에 match객체안에 params 프로퍼티에는 /movie/:id 에서 :id에 들어가있는 값이 담겨져 있다.\r\n    // 리다이렉트 기능을 가지고 있는 push메서드를 사용하기 위해 history객체에서 가져왔다.\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n      location: { pathname },\r\n    } = this.props;\r\n\r\n    // parseInt()함수를 통해 id를 숫자로 변환한다.\r\n    const parsedId = parseInt(id);\r\n\r\n    // isNaN()함수는 ()괄호안의 인자가 NaN인지 아닌지를 판별해서 NaN이라면 true를 아니라면 false를 반환한다.\r\n    // 만약 parsedId가 숫자가 아닌 문자여서 NaN이라면 push(\"/\")함수를 통해 / 경로로 리다이렉트 시켜버린다.\r\n    if (isNaN(parsedId)) {\r\n      push(\"/\");\r\n\r\n      // 주의! push()를 해준 후 return을 해줘야 함수가 종료되서 아래 콘솔로그 코드가 실행되지 않는다.\r\n      return;\r\n    }\r\n    // console.log(\"abc\");\r\n\r\n    let result = null;\r\n    const { isMovie } = this.state;\r\n\r\n    // isMovie는 url주소에 /movie/가 존재하는지 확인하는 변수로 url주소에 /movie/가 존재하면 true를 반환하고 아니라면 false를 반환한다.\r\n    // 그래서 만약 /movie/면 true를 /tv/면 false를 반환한다.\r\n    // isMovie가 true라면 try문안에 if문을 실행해서 moviesApi.movieDetail()를 통해 /movie/123같은 주소로 api.get()를 실행한다.\r\n    try {\r\n      if (isMovie) {\r\n        // const request = await moviesApi.movieDetail(parsedId);\r\n        // result = request.data;\r\n\r\n        // 위의 코드를 ES6문법에 따라 아래와 같이도 쓸 수 있다.\r\n        // 전체에 ()괄호를 쳐주고 {}를 통해 data프로퍼티를 바로 뽑아올 수 있다.\r\n        // 전체에 ()괄호를 쳐주게 되면 바로 객체 안으로 들어가게 되고 거기에 data프로퍼티를 뽑아와서 그 data프로퍼티의 이름을 result로 변경한 것이다.\r\n        // ()괄호를 쳐주게 되면 ({data:  result} = await moviesApi.movieDetail(parsedId)); 는 const = {data : result}와 같은 의미이다.\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n\r\n        const {\r\n          data: { results: similarMovies },\r\n        } = await moviesApi.similarMovies(parsedId);\r\n\r\n        const {\r\n          data: { results: recommendations },\r\n        } = await moviesApi.recommendations(parsedId);\r\n\r\n        const {\r\n          data: { cast },\r\n        } = await moviesApi.credits(parsedId);\r\n\r\n        const {\r\n          data: { keywords },\r\n        } = await moviesApi.keywords(parsedId);\r\n\r\n        const {\r\n          data: { results: reviews },\r\n        } = await moviesApi.reviews(parsedId);\r\n\r\n        const {\r\n          data: { backdrops },\r\n          data: { posters },\r\n        } = await moviesApi.images(parsedId);\r\n\r\n        this.setState({\r\n          recommendations,\r\n          cast,\r\n          keywords,\r\n          reviews,\r\n          backdrops: backdrops && backdrops,\r\n          posters: posters && posters,\r\n        });\r\n      } else {\r\n        // const request = await tvApi.tvDetail(parsedId);\r\n        // result = request.data;\r\n\r\n        ({ data: result } = await tvApi.tvDetail(parsedId));\r\n\r\n        const {\r\n          data: { results: similarMovies },\r\n        } = await tvApi.similarMovies(parsedId);\r\n\r\n        const {\r\n          data: { results: recommendations },\r\n        } = await tvApi.recommendations(parsedId);\r\n\r\n        const {\r\n          data: { cast },\r\n        } = await tvApi.credits(parsedId);\r\n\r\n        const {\r\n          data: { results: keywords },\r\n        } = await tvApi.keywords(parsedId);\r\n\r\n        const {\r\n          data: { results: reviews },\r\n        } = await tvApi.reviews(parsedId);\r\n\r\n        const {\r\n          data: { backdrops },\r\n          data: { posters },\r\n        } = await tvApi.images(parsedId);\r\n\r\n        const {\r\n          data: {\r\n            videos: { results: tvDetail2 },\r\n          },\r\n        } = await tvApi.tvDetail2(parsedId);\r\n\r\n        this.setState({\r\n          recommendations,\r\n          cast,\r\n          keywords,\r\n          reviews,\r\n          backdrops: backdrops && backdrops,\r\n          posters: posters && posters,\r\n          tvDetail2,\r\n        });\r\n      }\r\n\r\n      // console.log(\"result\", result);\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      this.setState({ error: \"Can't find Anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading, isMovie, recommendations, cast, keywords, reviews, backdrops, posters, tvDetail2 } = this.state;\r\n    // console.log(this.state);\r\n\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        isMovie={isMovie}\r\n        recommendations={recommendations}\r\n        cast={cast}\r\n        keywords={keywords}\r\n        reviews={reviews}\r\n        backdrops={backdrops}\r\n        posters={posters}\r\n        tvDetail2={tvDetail2}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailContainer;\r\n","// HashRouter as Router: HashRouter를 react-router-dom으로부터 가져와서 이름을 바꿔 Router로 사용하도록 한다.\r\n// HashRouter는 약간 앱처럼 보여주면서 사용자 페이지의 Hash를 사용한다. (URL에 #가 붙는다.)\r\n// BrowserRouter는 웹 사이트처럼 보여주면서 HTML history API를 사용한다. (URL에 #가 붙지 않고 일반적인 웹사이트처럼 보인다.)\r\nimport { BrowserRouter, HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport Movie from \"Routes/Movie\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n  return (\r\n    // react-router-dom에서 가져온 Route 컴포넌트는 리액트를 통해 라우트로 페이지를 만들고 이동할 수 있다.\r\n    // Route 컴포넌트는 Router 컴포넌트 안에서 사용되어야 한다.\r\n    // path는 URL을 지정할 수 있고 component에는 해당 URL에 왔을 때 보여줄 컴포넌트를 지정한다.\r\n    <Router>\r\n      <Header></Header>\r\n\r\n      {/* Switch컴포넌트는 리액트 라우터가 한 번에 오직 하나의 Route만 랜더하게 해준다. */}\r\n      {/* 다시말해, /tv나 /tv/abc가 있다하면 각각 하나의 라우트만 랜더해준다. (다른 라우트를 랜더해주지 않는다.) */}\r\n      {/* 그래서 다른 라우트를 랜더해주기 위해서는 /tv에 exact속성을 넣어줘서 정확히 /tv인 경우에만 TV컴포넌트를 랜더해서 보여주도록 한다. */}\r\n      {/* 만약 배포를 github에 하려고 gh-pages를 설치하고 배포한다면 BrowserRouter보다는 HashRouter를 사용하는 것이 덜 충돌이 생긴다. */}\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home}></Route>\r\n\r\n        <Route path=\"/movie\" exact component={Movie}></Route>\r\n        <Route path=\"/movie/popular\" exact component={Movie}></Route>\r\n        <Route path=\"/movie/now-playing\" exact component={Movie}></Route>\r\n        <Route path=\"/movie/upcoming\" exact component={Movie}></Route>\r\n        <Route path=\"/movie/top-rated\" exact component={Movie}></Route>\r\n\r\n        <Route path=\"/tv\" exact component={TV}></Route>\r\n        <Route path=\"/tv/airing-today\" exact component={TV}></Route>\r\n        <Route path=\"/tv/on-the-air\" exact component={TV}></Route>\r\n        <Route path=\"/tv/top-rated\" exact component={TV}></Route>\r\n\r\n        {/* 아래와 같이 component가 아닌 render를 통해서도 함수를 실행하고 리턴해서 보여줄 수 있다. */}\r\n        {/* <Route path=\"/tv/abc\" render={() => <h1>TV abc</h1>}></Route> */}\r\n        <Route path=\"/search\" component={Search}></Route>\r\n\r\n        {/* id를 받아서 그 id에 해당하는 주소로 갔을 때 Detail컴포넌트를 실행한다. */}\r\n        <Route path=\"/movie/:id\" component={Detail}></Route>\r\n        <Route path=\"/tv/:id\" component={Detail}></Route>\r\n\r\n        {/* Redirect컴포넌트는 path경로에 들어왔을 때 일치하는 Route 컴포넌트를 찾고, 일치하는 것이 없다면 / URL로 리다이렉트 시켜버린다. */}\r\n        {/* from=\"*\"는 모든 페이지를 다 리다이렉트 시킬 수 있다는 의미이고, to는 리다이렉트가 발생했을 때 리다이렉트 시켜버리는 URL을 의미한다. */}\r\n        <Redirect from=\"*\" to=\"/\"></Redirect>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\n// Header.js(Header)컴포넌트는 withRouter컴포넌트를 통해 감싸줘야 비로서 props를 받아올 수 있다. (왜냐하면 Header컴포넌트는 정보를 주도록 허락되지 않기 때문이다.)\r\n// 하지만 Router컴포넌트 아래에 있는 Route들은 withRouter컴포넌트를 통해 감싸주지 않아도 기본적으로 리액트 라우터가 Route들에게 props를 전달해준다.\r\n","// styled-components로 준 css스타일은 기본적으로 각각의 컴포넌트에만 로컬화된 형태로 사용되기 때문에 모든 컴포넌트에 줄 글로벌한 스타일을 주기 위해서 GlobalStyles.js를 생성해서 사용했다.\r\n// 일반적으로 스타일 컴포넌트는 각각 다른 컴포넌트들에게 영향을 주지 않기 위해서 로컬형태로 동작하지만 글로벌한 스타일을 주려고 할 때는(reset.css같은 경우) 아래와 같이 만들 수 있다.\r\n// styled-components로부터 가져온 createGlobalStyle함수를 사용해서 만든 globalStyles컴포넌트를 이용해서 모든 컴포넌트들에게 적용될 스타일을 줄 수 있다.\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\n// styled-component와 함께 사용되는 styled-reset을 이용해서 css를 초기화 시킬 수 있다.\r\n// styled-reset로부터 온 reset은 변수이기 때문에 createGlobalStyle``안에 넣어주고 자바스크립트 형태인 ${reset}을 통해 styled-reset을 적용할 수 있다.\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n  ${reset};\r\n\r\n  *{\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html{\r\n    scroll-behavior: smooth;\r\n  }\r\n\r\n  body{\r\n    /* background-color: rgb(25, 25, 25); */\r\n    /* padding-top: 50px; */\r\n    background-color: black;\r\n    font-family: 'Noto Sans KR', sans-serif;\r\n\r\n    &::-webkit-scrollbar {\r\n      width: 11px;\r\n      height: 11px;\r\n      background: #ffffff;\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n      border-radius: 7px;\r\n      background-color: #202020;\r\n\r\n      &:hover {\r\n        background-color: #303030;\r\n      }\r\n      &:active{\r\n        background-color: #C0C0C0;\r\n      }\r\n    }\r\n\r\n    &::-webkit-scrollbar-track {\r\n      background-color: #101010;\r\n    }\r\n  }\r\n  \r\n  a{\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\r\nimport Router from \"./Router\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\n\r\n// Header폴더 안에 index.js파일을 만들고 import Header from \"Components/Header\"처럼 import 하게 되면 기본적으로 Components/Header폴더 안에서 index.js파일을 찾아서 가져온다.\r\n// 원래는 Components/Header/Header를 통해 Header.js를 찾아서 가져와야 했지만 Header폴더를 따로 만들고 거기 안에 index.js를 만들어서 index.js에 Header.js를 가져오는 형태로도 만들 수 있다.\r\n// import Header2 from \"Components/Header2\";\r\n\r\nfunction App() {\r\n  return (\r\n    // 리액트에서는 두 개 이상의 컴포넌트를 한 번에 리턴할 수 없는 규칙이 있다.\r\n    // 그래서 리액트에서는 아래와 같이 크게 하나의 태그로 묶어줘야 하고 이 묶어주는 태그를 Fragment라고 부른다.\r\n    <div className=\"App\">\r\n      {/* <h1>App</h1> */}\r\n      {/* <Header2></Header2> */}\r\n      <GlobalStyles />\r\n      <Router />\r\n      {/* <Footer></Footer> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"Components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}